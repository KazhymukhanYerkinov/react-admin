{"version":3,"sources":["components/Header/TabsChoose/TabsChoose.jsx","components/Header/Header.jsx","api/api.js","redux/staff-reducer.js","components/Navbar/Navbar.jsx","components/Navbar/NavbarContainer.jsx","components/Staff/ToggleFooter/ToggleFooter.jsx","components/Staff/ToggleFooter/ToggleFooterContainer.jsx","components/Staff/Staff.jsx","components/Staff/StaffContainer.jsx","components/Location/ToggleFooter/ToggleFooter.jsx","redux/location-reducer.js","components/Location/ToggleFooter/ToggleFooterContainer.jsx","components/Location/Location.jsx","components/Location/LocationContainer.jsx","App.js","serviceWorker.js","redux/redux-store.js","index.js"],"names":["withStyles","root","flexGrow","backgroundColor","tabs","textColors","color","tabses","padding","props","useState","state","setState","classes","Paper","className","elevation","Tabs","value","onChange","event","centered","indicator","Tab","label","textLogin","marginRight","fontFamily","name","fontSize","role","float","AppBar","position","Toolbar","variant","Avatar","alt","instance","axios","baseURL","staffAPI","currentPage","pageSize","order","sign","get","then","response","data","code","delete","phone","email","level","fetch","method","body","JSON","stringify","full_name","headers","locationAPI","cities","initialState","height","editorBtn","staffs","detailStaff","count","page","signin","setToggleHeight","type","setEditorBtn","setDetailStaff","getStaffThunk","dispatch","a","respone","results","staffReducer","action","useStyles","makeStyles","theme","navlink","marginLeft","links","margin","span","bottom_admin","marginTop","width","admin_text","lineHeight","Navbar","styles","Link","component","Box","display","viewBox","fill","xmlns","rx","fill-rule","clip-rule","d","Button","aria-controls","onClick","to","connect","staffPage","ToggleFooterReduxForm","reduxForm","form","enableReinitialize","onSubmit","handleSubmit","Field","placeholder","map","r","l","aria-describedby","ToggleFooter","id","duration","formData","console","log","updateStaffThunk","initialValues","createStaffThunk","Staff","pagesCount","Math","ceil","pages","maxLeft","floor","maxRight","i","push","handleCode","e","icon","document","querySelectorAll","length","currentTarget","classList","toggle","contains","remove","add","getAttribute","setSignInStaff","setOrderStaff","class","scope","aria-hidden","s","getDetailStaffThunk","setCurrentPage","deleteStaffThunk","href","aria-label","p","useEffect","editBtn","setLocationHeight","adminRegions","regions","microRegions","streets","complexses","setCities","setLocationEdit","locationReducer","locationPage","Location","citySearch","setCitySearch","target","getLocationThunk","u","colspan","admin_regions","micro_regions","res_complexes","sidebar","background","maxWidth","App","Grid","container","spacing","item","xs","sm","exact","path","render","Boolean","window","location","hostname","match","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","basename","process","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2d9b7faa.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: 'inhert',\r\n    },\r\n    tabs: {\r\n        \r\n        backgroundColor: '#D42D11',\r\n        \r\n    },\r\n    textColors: {\r\n        color: '#D42D11',\r\n    },\r\n    tabses: {\r\n        padding: 20,\r\n    }\r\n}\r\n\r\nconst TabsChoose = (props) => {\r\n    const [state, setState] = useState(0);\r\n\r\n    const handleChange = (event, value) => {                \r\n        setState(value);\r\n    }\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <Paper className = {classes.root}\r\n               elevation={0}>\r\n            <Tabs \r\n                value = {state}\r\n                onChange = { handleChange }\r\n                className = {classes.textColors}\r\n                centered\r\n                classes = {{\r\n                    indicator: classes.tabs\r\n                }}>\r\n\r\n                <Tab label = \"Администрация\"\r\n                     className = {classes.tabses}/>\r\n            </Tabs>\r\n        </Paper>\r\n    );\r\n\r\n}\r\n\r\nexport default withStyles(styles)(TabsChoose);","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Tabs from './TabsChoose/TabsChoose';\r\n\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n        \r\n        \r\n    },\r\n    textLogin: {\r\n        marginRight: 12,   \r\n        fontFamily: 'SF UI Display',   \r\n    },\r\n    name: {\r\n        fontSize: 15,\r\n        color: '#003360',\r\n        \r\n    },\r\n    role: {\r\n        fontSize: 12,\r\n        float: 'right',\r\n        color: '#8AA1C1',\r\n    }\r\n    \r\n}\r\nconst Header = (props) => {\r\n    const { classes } = props;\r\n    return (\r\n        <div >\r\n            <AppBar position = 'sticky'\r\n                    color = 'white'\r\n                    className = {classes.root}>\r\n                <Toolbar variant = \"dense\">\r\n                    <Tabs />\r\n                    \r\n                    <div className = {classes.textLogin}>\r\n                        <span className = {classes.name}> Kazhymukhan Yerkinov </span> <br/>\r\n                        \r\n                        <span className = {classes.role}> admin </span>\r\n                    </div>\r\n\r\n                    \r\n                    <Avatar alt = \"Role Role\" />\r\n                </Toolbar>                          \r\n            </AppBar>\r\n\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Header);","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: `https://dashboard-i-con.herokuapp.com/`,\r\n});\r\n\r\nexport const staffAPI = {\r\n    getStaffs(currentPage, pageSize, order, sign) {\r\n        return instance.get(`api/accounts/list?page=${currentPage}&page_size=${pageSize}&order=${order}&sign=${sign}`).then(response => {\r\n            return response.data;\r\n        });\r\n    },\r\n    getStaffsDetail(code){\r\n        return instance.get(`api/accounts/detail/${code}`).then(response => {\r\n            return response.data;\r\n        })\r\n    },\r\n\r\n    deleteStaff(code) {\r\n        return instance.delete(`api/accounts/delete/${code}`);\r\n    },\r\n\r\n    updateStaff(code, name, phone, role, email, level) {\r\n        return fetch(`https://dashboard-i-con.herokuapp.com/api/accounts/update/${code}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({\r\n                full_name: name,\r\n                position: role,\r\n                level: level,\r\n                phone: phone,\r\n                email: email,  \r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            }\r\n\r\n        })\r\n    },\r\n    createStaffs(name, phone, role, email, level){\r\n        return fetch(`https://dashboard-i-con.herokuapp.com/api/accounts/create`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                full_name: name,\r\n                position: role,\r\n                level: level,\r\n                phone: phone,\r\n                email: email,  \r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const locationAPI = {\r\n    getLocation(cities) {\r\n        return instance.get(`api/locations/lists?city=${cities}&street=&region=&micro_region=&res_complex=&admin_region=&search=`).then(response => {\r\n            return response.data;\r\n        })\r\n    }\r\n}","import { staffAPI } from \"../api/api\";\r\n\r\nconst SET_TOGGLE_HEIGHT = 'SET_TOGGLE_HEIGHT';\r\nconst SET_EDITOR_BUTTON = 'SET_EDITOR_BUTTON';\r\n\r\nconst SET_STAFFS = 'SET_STAFFS';\r\nconst SET_STAFF_DETAIL = 'SET_DETAIL_STAFF';\r\n\r\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\n\r\nconst SET_ORDER_STAFFS = 'SET_ORDER_STAFFS';\r\nconst SET_SIGNIN_STAFFS = 'SET_SIGNIN_STAFFS';\r\n\r\n\r\n\r\n\r\n// order and sigin add\r\n// pages 2 dynamicaly\r\n// optimization height + editorBtn //  detailStaff check in\r\n\r\nlet initialState = {\r\n    height: 0,\r\n    editorBtn: false,\r\n\r\n\r\n    staffs: [],\r\n    detailStaff: {},\r\n\r\n\r\n    currentPage: 1,\r\n    count: 200,\r\n    page: 15,\r\n\r\n    order: '',\r\n    signin: '',\r\n\r\n\r\n}\r\n\r\nconst staffReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_TOGGLE_HEIGHT:\r\n            return {\r\n                ...state,\r\n                height: action.height\r\n            }\r\n        case SET_STAFFS:\r\n            return {\r\n                ...state,\r\n                staffs: action.staffs\r\n            }\r\n        case SET_TOTAL_COUNT:\r\n            return {\r\n                ...state,\r\n                count: action.count\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_EDITOR_BUTTON:\r\n            return {\r\n                ...state,\r\n                editorBtn: action.editorBtn\r\n            }\r\n        case SET_STAFF_DETAIL:\r\n            return {\r\n                ...state,\r\n                detailStaff: action.detailStaff\r\n\r\n            }\r\n        case SET_ORDER_STAFFS:\r\n            return {\r\n                ...state,\r\n                order: action.order\r\n            }\r\n        case SET_SIGNIN_STAFFS:\r\n            return {\r\n                ...state,\r\n                signin: action.signin\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setToggleHeight = (height) => ({ type: SET_TOGGLE_HEIGHT, height });\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const setEditorBtn = (editorBtn) => ({ type: SET_EDITOR_BUTTON, editorBtn });\r\nexport const setDetailStaff = (detailStaff) => ({ type: SET_STAFF_DETAIL, detailStaff });\r\n\r\nexport const setOrderStaff = (order) => ({ type: SET_ORDER_STAFFS, order });\r\nexport const setSignInStaff = (signin) => ({ type: SET_SIGNIN_STAFFS, signin });\r\n\r\nconst setStaffs = (staffs) => ({ type: SET_STAFFS, staffs });\r\nconst setTotalCount = (count) => ({ type: SET_TOTAL_COUNT, count });\r\n\r\n\r\n\r\n\r\nexport const getStaffThunk = (currentPage, pageSize, order, sign) => async (dispatch) => {\r\n    let respone = await staffAPI.getStaffs(currentPage, pageSize, order, sign);\r\n    dispatch(setTotalCount(respone.count));\r\n    dispatch(setStaffs(respone.results));\r\n}\r\n\r\nexport const createStaffThunk = (name, phone, role, email, level, currentPage, pageSize, order, sign) => async (dispatch) => {\r\n    await staffAPI.createStaffs(name, phone, role, email, level);\r\n    dispatch(getStaffThunk(currentPage, pageSize, order, sign));\r\n}\r\n\r\nexport const updateStaffThunk = (code, name, phone, role, email, level, currentPage, pageSize, order, sign) => async (dispatch) => {\r\n    await staffAPI.updateStaff(code, name, phone, role, email, level);\r\n    dispatch(getStaffThunk(currentPage, pageSize, order, sign));\r\n}\r\n\r\nexport const deleteStaffThunk = (code, currentPage, pageSize, order, signin) => async (dispatch) => {\r\n    await staffAPI.deleteStaff(code);\r\n    dispatch(getStaffThunk(currentPage, pageSize, order, signin))\r\n}\r\n\r\nexport const getDetailStaffThunk = (code) => async (dispatch) => {\r\n    let data = await staffAPI.getStaffsDetail(code);\r\n    dispatch(setDetailStaff(data));\r\n} \r\n\r\n\r\n\r\nexport default staffReducer;\r\n\r\n","import React from 'react';\r\nimport { Box, Link ,Button} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './NavbarModule.css';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navlink: {\r\n      marginLeft:7,\r\n      marginRight:7,\r\n      fontFamily: 'SFUIDisplay',\r\n      fontSize: '11px',\r\n      color: '#8AA1C1',\r\n      \r\n    },\r\n    links:{\r\n        margin:20\r\n    },\r\n    span:{\r\n        color: '#8AA1C1', \r\n    },\r\n\r\n    // иконка и текст администрация \r\n    bottom_admin:{\r\n        marginTop:20,\r\n        width:'100%'\r\n    },\r\n    admin_text:{\r\n        marginLeft:20,\r\n        lineHeight: '28px',\r\n        fontFamily:'SFUIDisplay',\r\n        fontSize:'24px',\r\n        color:'#003360',\r\n           \r\n    }\r\n\r\n    \r\n  }));\r\n\r\n\r\nconst Navbar = (props) => {\r\n\r\n\r\n    const handleClick = () => {\r\n        props.setDetailStaff({});\r\n        props.setToggleHeight(250);\r\n        props.setEditorBtn(false);\r\n    }\r\n    \r\n    const styles = useStyles();\r\n    return(\r\n        <div className = {styles.links}>\r\n            <div>\r\n                <Link component = \"button\">\r\n                &#62;&#62; \r\n                </Link>\r\n                \r\n                <Link component = \"button\" className = {styles.navlink}>\r\n                    Главная  \r\n                </Link>\r\n\r\n                <span className = {styles.span}>/</span>\r\n\r\n                <Link component = \"button\" className = {styles.navlink}>\r\n                    Администрация  \r\n                </Link>\r\n                <span className = {styles.span}>/</span>\r\n                <Link component = \"button\" className = {styles.navlink}>\r\n                    Настройки  \r\n                </Link>\r\n            </div>\r\n\r\n            <div className = {styles.bottom_admin}>\r\n                <Box display=\"flex\" >\r\n                    <Box flexGrow={1}>\r\n                        {/* ICON SVG */}\r\n                        <span>\r\n                            <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <rect width=\"32\" height=\"32\" rx=\"4\" fill=\"#D42D11\"/>\r\n                                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.008 20H21.3333C21.702 20 22 19.7014 22 19.3334V10.6667C22 9.93137 21.402 9.33337 20.6667 9.33337H12C11.196 9.33337 10 9.86604 10 11.3334V13.3334V17.3334V19.3334V20.6667C10 22.134 11.196 22.6667 12 22.6667H22V21.3334H12.008C11.7 21.3254 11.3333 21.2034 11.3333 20.6667C11.3333 20.13 11.7 20.008 12.008 20ZM11.3333 13.3334V11.3334C11.3333 10.7967 11.7 10.6747 12 10.6667H20.6667V18.6667H11.3333V17.3334V13.3334ZM19.3333 12H13.3333V13.3334H19.3333V12Z\" fill=\"white\"/>\r\n                            </svg>\r\n\r\n                        </span>\r\n                        {/* ADMIN TEXT */}\r\n                        \r\n                        <span className = {styles.admin_text}>Администрация</span>\r\n\r\n                    \r\n                    </Box>\r\n                    \r\n                    <Box>\r\n                    <Button variant=\"contained\" color=\"primary\"\r\n                    aria-controls='example-panel'\r\n                    onClick = { handleClick }>\r\n                        add new staff\r\n                    </Button>\r\n                    </Box>\r\n                </Box>\r\n                    \r\n            </div>\r\n\r\n            <div className = \"mt-3 w-100   bottom-nav\">\r\n                <ul className=\"nav nav-pills\">\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to = {'/'}>Сотрудники</NavLink>\r\n                    </li>\r\n                    {/* <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link \" to = {'/location'}>Местоположение</NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to = {'/filial'}>Филиалы</NavLink>\r\n                    </li>\r\n\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to = {'/card'}>Карточка</NavLink>\r\n                    </li> */}\r\n                </ul>\r\n            </div>\r\n           \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setToggleHeight, setEditorBtn, setDetailStaff } from '../../redux/staff-reducer';\r\nimport Navbar from './Navbar';\r\n\r\n\r\n\r\nconst NavbarContainer = (props) => {\r\n    return <Navbar height = {props.height}\r\n                   setToggleHeight = {props.setToggleHeight}\r\n                   setEditorBtn = {props.setEditorBtn}\r\n                   setDetailStaff = {props.setDetailStaff} />\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        height: state.staffPage.height,\r\n        \r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    setToggleHeight,\r\n    setEditorBtn,\r\n    setDetailStaff,\r\n})(NavbarContainer)","import React, { useState } from 'react';\r\nimport './footerstyle.css';\r\nimport AnimateHeight from 'react-animate-height';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\n\r\n\r\nconst ToggleFooterForm = (props) => {\r\n    const role = ['Backend-Developer', 'Frontend-Developer', 'Fullstack-Developer', 'Менеджер'];\r\n    const level = ['Администратор', 'Супер Администратор', 'Пользователь'];\r\n\r\n\r\n\r\n    \r\n\r\n    \r\n\r\n    return (\r\n                <form onSubmit = { props.handleSubmit }> \r\n                    <div className = \"d-flex\">   \r\n                        <div className = \"justify-content-start ml-5 mr-5 mb-5 mt-4\">\r\n                            <h6>Ф.И.О</h6>\r\n                            <Field type=\"text\" component = {'input'} className = \"form-control\" placeholder=\"Username\" name = {'full_name'} /> \r\n\r\n                            <h6 className = \"mt-2\">Телефон номера</h6>\r\n                            <Field type=\"tel\" component = {'input'} className = \"form-control\" placeholder=\"8 777 456 23 23\" name = {'phone'}/>\r\n                        </div> \r\n\r\n                        <div className = \"justify-content-start ml-5 mr-5 mb-5 mt-4\">\r\n                            <h6>Должность</h6>\r\n                            <Field  className=\"form-control\" name = {'position'} component = {'select'}>\r\n                                <option value = ''></option>\r\n                                {role.map(r => <option value = {r}> {r} </option>)}\r\n                            </Field>\r\n\r\n                            <h6 className = \"mt-2\">Email</h6>\r\n                            <Field type=\"email\" component = {'input'} className = 'form-control' name = {'email'} placeholder = \"Электронный адрес\" />\r\n                        </div>\r\n\r\n                        <div className = \"justify-content-start ml-5 mr-5 mb-5 mt-4\">\r\n                            <h6>Уровень Доступа</h6>\r\n                            <Field className = \"form-control\" name = {'level'} component = {'select'}>\r\n                                <option></option>\r\n                                {level.map(l => <option value = {l}> {l} </option>)}\r\n                            </Field>\r\n\r\n                            <p>\t&nbsp;</p>\r\n                            {props.editorBtn ? <button className = \"btn btn-primary  btn-block\" aria-describedby=\"basic-addon1\"> Изменить </button>:\r\n                                               <button className = \"btn btn-primary  btn-block\" aria-describedby=\"basic-addon1\"> Добавить </button>}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n    )\r\n}\r\n\r\nconst ToggleFooterReduxForm = reduxForm({ form: 'createStaff', enableReinitialize: true})(ToggleFooterForm);\r\n\r\n\r\n\r\n\r\nconst ToggleFooter = (props) => {\r\n\r\n    \r\n\r\n    const handleClick = () => {\r\n        props.setToggleHeight(0);\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        console.log(props.page);\r\n        if (props.editorBtn) props.updateStaffThunk(props.initialValues.code, formData.full_name, formData.phone, formData.position, formData.email, formData.level, props.currentPage, props.page, props.order, props.signin)\r\n        else props.createStaffThunk(formData.full_name, formData.phone, formData.position, formData.email, formData.level, props.currentPage, props.page, props.order,  props.signin); \r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div className = \"fixed-bottom foter\">  \r\n            \r\n            <AnimateHeight\r\n                id='example-panel'\r\n                duration={ 500 }\r\n                height={ props.height }r\n                    <div className = \"d-flex justify-content-between p-2 top-foter\">\r\n                         {props.editorBtn ? <span className = \"staf_text p-2\"> Update </span>: <span className = \"staf_text p-2\"> Add new staff </span>}\r\n                         <button className = 'btn app-toggle-close' onClick = { handleClick }> &times; </button>\r\n                    </div>\r\n                    <ToggleFooterReduxForm setToggleHeight = {props.setToggleHeight}\r\n                                  setEditorBtn = {props.setEditorBtn}\r\n                                  onSubmit = { onSubmit }\r\n\r\n                                  initialValues = {props.initialValues}\r\n                                  editorBtn = {props.editorBtn}\r\n                                  height = {props.height}\r\n                                  />  \r\n                \r\n            </AnimateHeight>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ToggleFooter;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ToggleFooter from './ToggleFooter';\r\nimport { setToggleHeight, createStaffThunk, updateStaffThunk } from '../../../redux/staff-reducer';\r\n\r\n\r\n\r\nconst ToggleFooterContainer = (props) => {\r\n\r\n    return <ToggleFooter setToggleHeight = {props.setToggleHeight}\r\n                         setEditorBtn = {props.setEditorBtn}\r\n                         createStaffThunk = {props.createStaffThunk}\r\n                         updateStaffThunk = {props.updateStaffThunk}\r\n\r\n                         initialValues = {props.initialValues}\r\n                         editorBtn = {props.editorBtn}\r\n                         height = {props.height}\r\n\r\n                         currentPage = {props.currentPage}\r\n                         page = {props.page }\r\n                         order = {props.order}\r\n                         signin = {props.signin}\r\n                         />\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        height: state.staffPage.height,\r\n        currentPage: state.staffPage.currentPage,\r\n        order: state.staffPage.order,\r\n        signin: state.staffPage.signin,\r\n        page: state.staffPage.page,\r\n        initialValues: {\r\n            code: state.staffPage.detailStaff.code,\r\n            full_name: state.staffPage.detailStaff.full_name,\r\n            position: state.staffPage.detailStaff.position,\r\n            phone: state.staffPage.detailStaff.phone,\r\n            email: state.staffPage.detailStaff.email,\r\n            level: state.staffPage.detailStaff.level,\r\n        }\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    setToggleHeight,\r\n    createStaffThunk,\r\n    updateStaffThunk,\r\n})(ToggleFooterContainer);","import React from 'react';\r\n\r\nimport './StaffModule.css';\r\nimport ToggleFooterContainer from './ToggleFooter/ToggleFooterContainer';\r\n\r\nlet order = '';\r\nlet sign = '';\r\n\r\nconst Staff = (props) => {\r\n    //////////// PAGINATION LOGIC //////////////////\r\n    let pagesCount = Math.ceil(props.count / props.page);\r\n    let pages = [];\r\n\r\n    let maxLeft = (props.currentPage - Math.floor(5/props.page));\r\n    let maxRight = (props.currentPage + Math.floor(5/props.page));\r\n\r\n    if (maxLeft < 1) {\r\n        maxLeft = 1;\r\n        maxRight = 5;\r\n    }\r\n    if (maxRight > pagesCount) {\r\n        maxLeft = pagesCount - (5 - 1);\r\n\r\n        if (maxLeft < 1) {\r\n            maxLeft = 1;\r\n        }\r\n        maxRight = pagesCount\r\n    }\r\n\r\n    for (let i = maxLeft; i <= maxRight; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n\r\n    ///////////// PAGINATION AND SORT  /////////////////////////\r\n    const handleCode = (e) => {\r\n\r\n        let icon = document.querySelectorAll('.fa');\r\n\r\n        for(let i = 0; i < icon.length; i++) {\r\n            if (icon[i] === e.currentTarget) {\r\n                e.currentTarget.classList.toggle('fa-angle-down');\r\n                e.currentTarget.classList.toggle('fa-angle-up');\r\n            }\r\n            else {\r\n                if (icon[i].classList.contains('fa-angle-up')){\r\n                    icon[i].classList.remove('fa-angle-up');\r\n                    icon[i].classList.add('fa-angle-down');\r\n                }\r\n            }\r\n        }\r\n        order = e.currentTarget.getAttribute('name');\r\n        sign = e.currentTarget.classList.contains('fa-angle-up')? '' : '-';\r\n\r\n        props.setSignInStaff(sign);\r\n        props.setOrderStaff(order);\r\n\r\n        \r\n        props.getStaffThunk(props.currentPage, props.page, order, sign);\r\n    }\r\n\r\n    //////////////////  DELETE BUTTON /////////////////////////////\r\n    const handleDelete = (code, currentPage) => {\r\n        if (props.count > props.page) {\r\n            const temp = props.count % props.page;\r\n            if (temp == 1) {\r\n                props.setCurrentPage(1)\r\n                props.deleteStaffThunk(code, currentPage - 1, props.page, order, sign)\r\n            }\r\n            else {\r\n                props.deleteStaffThunk(code, currentPage, props.page, order, sign)\r\n            }\r\n        }\r\n        else {\r\n            props.deleteStaffThunk(code, currentPage, props.page,  order, sign)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className = 'app-staff'>\r\n            <table class=\"table table-striped\">\r\n                <thead className = 'app-staff-table-tr'>\r\n                    <tr >\r\n                            <th scope=\"col\"> Код \r\n\r\n                                <i class=\"fa fa-angle-down\" name = 'code' aria-hidden=\"true\" onClick = { handleCode }></i>\r\n \r\n                            </th>\r\n\r\n                            <th scope=\"col\" className = 'app-staff-table-th'>Ф.И.О \r\n                            \r\n                                <i class=\"fa fa-angle-down\" name = 'full_name' aria-hidden=\"true\" onClick = { handleCode }></i>\r\n                                \r\n                            </th>\r\n\r\n\r\n                            <th scope=\"col\" className = 'app-staff-table-th'>Должность\r\n                                \r\n                                <i class=\"fa fa-angle-down\" name = 'position' aria-hidden=\"true\" onClick = { handleCode }></i>\r\n\r\n                            </th>\r\n\r\n\r\n                            <th scope=\"col\" className = 'app-staff-table-th'>Телефон\r\n\r\n                                <i class=\"fa fa-angle-down\" name = 'phone' aria-hidden=\"true\" onClick = { handleCode }></i>\r\n\r\n                            </th>\r\n\r\n\r\n                            <th scope=\"col\" className = 'app-staff-table-th'>E-mail\r\n\r\n                                <i class=\"fa fa-angle-down\" name = 'email' aria-hidden=\"true\" onClick = { handleCode }></i>\r\n\r\n                            </th>\r\n\r\n\r\n                            <th className = 'app-staff-table-th'></th>\r\n                            <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.staffs.map(s => {\r\n                        return (\r\n                                <tr>\r\n                                    <td scope=\"row\"> {s.code} </td>\r\n                                    <td> {s.full_name} </td>\r\n                                    <td> {s.position} </td>\r\n                                    <td> {s.phone} </td>\r\n                                    <td> {s.email}</td>\r\n                                    <td> <i class=\"material-icons\" onClick = { () => {props.setEditorBtn(true)\r\n                                                                                      props.setToggleHeight(250)\r\n                                                                                      props.getDetailStaffThunk(s.code)}}> mode_edit </i> </td>\r\n                                    <td> <i class=\"material-icons app-staff-delete\" onClick = { () => { handleDelete(s.code, props.currentPage)}}>delete</i> </td>\r\n                                </tr>\r\n                                );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            <div>\r\n                <ToggleFooterContainer setEditorBtn = {props.setEditorBtn}\r\n                                       editorBtn = {props.editorBtn}/>\r\n            </div>\r\n\r\n           \r\n        </div>\r\n\r\n        <nav className = 'ml-5'>\r\n            <ul className = 'pagination justify-content-end'>\r\n                <li class=\"page-item\" onClick = { () => {props.setCurrentPage(1)\r\n                                                        props.getStaffThunk(1, props.page, order, sign) }}>\r\n                    <a class=\"page-link\" href=\"#\" aria-label=\"Previous\">\r\n                        <span aria-hidden=\"true\">&laquo; ПЕРВАЯ </span>\r\n                    </a>\r\n                </li>\r\n\r\n                {pages.map(p => {\r\n                    return <li className={`page-item ${props.currentPage === p && 'active'}`} onClick = { () => {props.setCurrentPage(p) \r\n                                                                                                                 props.getStaffThunk(p, props.page, order, sign)}}>\r\n                                <a class=\"page-link\" href=\"#\">  {p} </a>\r\n                           </li>\r\n                })}\r\n                \r\n               \r\n                <li class=\"page-item\" onClick = { () => {props.setCurrentPage(pagesCount) \r\n                                                         props.getStaffThunk(pagesCount, props.page, order, sign)}}>\r\n                <a class=\"page-link\" href=\"#\" aria-label=\"Next\">\r\n                    <span aria-hidden=\"true\">ПОСЛЕДНЯЯ &raquo;</span>\r\n                </a>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Staff;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Staff from './Staff';\r\nimport { setCurrentPage, getStaffThunk, setEditorBtn, setToggleHeight, deleteStaffThunk, getDetailStaffThunk, setOrderStaff , setSignInStaff} from '../../redux/staff-reducer';\r\n\r\n\r\nconst StaffContainer = (props) => {\r\n\r\n    useEffect( () => {\r\n        props.getStaffThunk(props.currentPage, props.page, '', '');\r\n    }, []);\r\n\r\n    return <Staff currentPage = {props.currentPage}\r\n                  count = {props.count}\r\n                  editorBtn = {props.editorBtn}\r\n                  staffs = {props.staffs}\r\n                  page = {props.page}\r\n\r\n                  setCurrentPage = {props.setCurrentPage}\r\n                  setEditorBtn = {props.setEditorBtn}\r\n                  setToggleHeight = {props.setToggleHeight}\r\n                  getStaffThunk = {props.getStaffThunk}\r\n                  getDetailStaffThunk = {props.getDetailStaffThunk}\r\n                  deleteStaffThunk = {props.deleteStaffThunk}\r\n                  setOrderStaff = {props.setOrderStaff}\r\n                  setSignInStaff = {props.setSignInStaff}\r\n\r\n                  />\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        currentPage: state.staffPage.currentPage,\r\n        count: state.staffPage.count,\r\n        editorBtn: state.staffPage.editorBtn,\r\n        staffs: state.staffPage.staffs,\r\n        page: state.staffPage.page,\r\n\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    setCurrentPage,\r\n    getStaffThunk,\r\n    setEditorBtn,\r\n    setToggleHeight,\r\n    getDetailStaffThunk,\r\n    deleteStaffThunk,\r\n    setOrderStaff,\r\n    setSignInStaff,\r\n})(StaffContainer);","import React from 'react';\r\nimport AnimateHeight from 'react-animate-height';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport './ToggleModule.css';\r\n\r\n\r\nconst ToggleFooter = (props) => {\r\n\r\n    const handleClose = () => {\r\n        props.setLocationHeight(0)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = \"fixed-bottom foter\">\r\n            <AnimateHeight\r\n                    id='example-panel'\r\n                    duration={ 500 }\r\n                    height={ props.height }>   \r\n\r\n                        <div className = \"d-flex justify-content-between p-2 top-foter\">\r\n                            {props.editBtn ? <span className = \"staf_text p-2\"> update city </span>: <span className = \"staf_text p-2\"> add new city </span>}\r\n                            <button className = 'btn app-toggle-close' onClick = { handleClose }> &times; </button>\r\n                        </div>\r\n\r\n\r\n                        <form> \r\n                        <div className = \"d-flex\">   \r\n                            <div className = \"justify-content-start ml-5 mr-5 mb-5 mt-4\">\r\n                                <h6> Название города </h6>\r\n                                <input type=\"text\" component = {'input'} className = \"form-control\" placeholder=\"Название города\" name = {'full_name'} /> \r\n                            </div> \r\n\r\n                            <div className = \"justify-content-start ml-5 mr-5 mb-5 mt-4\">\r\n                                <p>\t&nbsp;</p>\r\n                            \r\n                                {props.editBtn ? <button className = \"btn btn-primary  btn-block\" aria-describedby=\"basic-addon1\"> Изменить </button>:\r\n                                               <button className = \"btn btn-primary  btn-block\" aria-describedby=\"basic-addon1\"> Добавить </button>}\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                        \r\n                    \r\n                </AnimateHeight>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ToggleFooter;","import { locationAPI } from \"../api/api\";\r\n\r\nconst SET_LOCATION_CITIES = 'SET_LOCATION_CITIES';\r\nconst SET_LOCATION_ADMIN_REGIONS = 'SET_LOCATION_ADMIN_REGIONS';\r\nconst SET_LOCATION_REGIONS = 'SET_LOCATION_REGION';\r\nconst SET_LOCATION_MICRO_REGIONS = 'SET_LOCATION_MICRO_REGIONS';\r\nconst SET_LOCATION_STREETS = 'SET_LOCATION_STREETS';\r\nconst SET_LOCATION_COMPLEXES = 'SET_LOCATION_COMPLEXES';\r\n\r\nconst SET_LOCATION_TOGGLE_HEIGHT = 'SET_LOCATION_TOGGLE_HEIGHT';\r\nconst SET_LOCATION_EDIT_BUTTON = 'SET_LOCATION_EDIT_BUTTON';\r\n\r\n\r\nlet initialState = {\r\n\r\n    cities: [],\r\n    adminRegions: [],\r\n    regions: [],\r\n    microRegions: [],\r\n    streets: [],\r\n    complexses: [],\r\n\r\n    height: 0,\r\n    editBtn: false,\r\n}\r\n\r\n\r\nconst locationReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_LOCATION_CITIES:\r\n            return {\r\n                ...state,\r\n                cities: action.cities\r\n            }\r\n        case SET_LOCATION_ADMIN_REGIONS:\r\n            return {\r\n                ...state,\r\n                adminRegions: action.adminRegions\r\n            }\r\n        case SET_LOCATION_REGIONS:\r\n            return {\r\n                ...state,\r\n                regions: action.regions\r\n            }\r\n        case SET_LOCATION_MICRO_REGIONS:\r\n            return {\r\n                ...state,\r\n                microRegions: action.microRegions\r\n            }\r\n        case SET_LOCATION_STREETS:\r\n            return {\r\n                ...state,\r\n                streets: action.streets\r\n            }\r\n        case SET_LOCATION_COMPLEXES:\r\n            return {\r\n                ...state,\r\n                complexses: action.complexses\r\n            }\r\n\r\n        case SET_LOCATION_TOGGLE_HEIGHT:\r\n            return {\r\n                ...state,\r\n                height: action.height\r\n            }\r\n        case SET_LOCATION_EDIT_BUTTON:\r\n            return {\r\n                ...state,\r\n                editBtn: action.editBtn\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst setCities = (cities) => ({ type: SET_LOCATION_CITIES, cities });\r\nconst setAdminRegions = (adminRegions) => ({ type: SET_LOCATION_ADMIN_REGIONS, adminRegions });\r\nconst setRegions = (regions) => ({ type: SET_LOCATION_REGIONS, regions });\r\nconst setMicroRegions = (microRegions) => ({ type: SET_LOCATION_MICRO_REGIONS, microRegions });\r\nconst setStreets = (streets) => ({ type: SET_LOCATION_STREETS, streets });\r\nconst setComplexes = (complexses) => ({ type: SET_LOCATION_COMPLEXES, complexses });\r\n\r\nexport const setLocationHeight = (height) => ({ type: SET_LOCATION_TOGGLE_HEIGHT, height });\r\nexport const setLocationEdit = (editBtn) => ({ type: SET_LOCATION_EDIT_BUTTON, editBtn })\r\n\r\n\r\nexport const getLocationThunk = (cities) => async (dispatch) => {\r\n    let data = await locationAPI.getLocation(cities);\r\n    dispatch(setCities(data.cities));\r\n    dispatch(setAdminRegions(data.admin_regions));\r\n    dispatch(setRegions(data.regions));\r\n    dispatch(setMicroRegions(data.micro_regions));\r\n    dispatch(setStreets(data.streets));\r\n    dispatch(setComplexes(data.res_complexes));\r\n}\r\n\r\n\r\nexport default locationReducer;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ToggleFooter from './ToggleFooter';\r\nimport { setLocationEdit, setLocationHeight } from '../../../redux/location-reducer';\r\n\r\n\r\n\r\n\r\nconst ToggleFooterContainer = (props) => {\r\n    return <ToggleFooter height = {props.height}\r\n                         editBtn = {props.editBtn}\r\n                         \r\n                         setLocationHeight = {props.setLocationHeight}\r\n                         setLocationEdit = {props.setLocationEdit}\r\n                         />\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        height: state.locationPage.height,\r\n        editBtn: state.locationPage.editBtn,\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    setLocationHeight,\r\n    setLocationEdit,\r\n})(ToggleFooterContainer)","import React, {useState} from 'react';\r\nimport './LocationModule.css';\r\nimport ToggleFooterContainer from './ToggleFooter/ToggleFooterContainer';\r\n\r\nconst Location = (props) => {\r\n\r\n    const [citySearch, setCitySearch ] = useState('');\r\n\r\n    const handleSearch = () => {\r\n\r\n        props.getLocationThunk(citySearch);\r\n\r\n    }\r\n\r\n    const handleAdd = () => {\r\n        props.setLocationHeight(180);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n    <>\r\n      <div className = \"container\">\r\n          <div className = \"row\" >\r\n          <div className = \"col-4  border  p-2\">\r\n\r\n\r\n                <div className = \"d-flex justify-content-between\">\r\n                    <span className = \"pt-3 pl-3\"> CITIES </span>\r\n                    <button className = \"btn btn-success\" onClick = { handleAdd }>add cities</button>    \r\n                </div>\r\n\r\n\r\n                <hr className = \"line\"/>\r\n\r\n           \r\n                <div className = \"d-flex justify-content-between\">\r\n                    <input className=\"form-control\" value = { citySearch } onChange = {(e) => { setCitySearch(e.target.value) }} />\r\n                    <button className = \"btn btn-light\" onClick = { handleSearch }>Search</button>\r\n                </div>\r\n\r\n                {/*LISTT OF CITY*/}\r\n                <br />\r\n                <div className = \"table-wrapper-scroll-y my-custom-scrollbar\">\r\n                <table className = \"table border\">\r\n                    <tbody>\r\n                        {props.cities.map( u => {\r\n                        return (\r\n                            <tr>\r\n                                <td scope=\"row\" ><input type=\"radio\"/></td>\r\n                                <td colspan = \"4\"> {u.name} </td>\r\n                                <td  className = \"text-right border-bottom\"> \r\n                                    <button className = \"btn btn-light btn-sm\"> <i class=\"material-icons\"> mode_edit </i> </button>\r\n                                    <span> </span> \r\n                                    <button className = \"btn btn-light btn-sm\"> <i class=\"material-icons app-staff-delete\"> delete </i> </button>\r\n                                </td>\r\n                            </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n              </div>\r\n          </div>\r\n\r\n          </div>\r\n      </div> \r\n      <div>\r\n          <ToggleFooterContainer />\r\n      </div>\r\n      </> \r\n    );\r\n}\r\n\r\nexport default Location;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Location from './Location';\r\nimport { getLocationThunk, setLocationHeight, setLocationEdit } from '../../redux/location-reducer';\r\n\r\n\r\n\r\nconst LocationContainer = (props) => {\r\n    useEffect( () => {\r\n        props.getLocationThunk('');\r\n    }, []);\r\n\r\n\r\n\r\n    return <Location  cities = {props.cities}\r\n                      getLocationThunk = { props.getLocationThunk }\r\n                      setLocationEdit = {props.setLocationEdit}\r\n                      setLocationHeight = {props.setLocationHeight} />\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        cities: state.locationPage.cities,\r\n        height: state.locationPage.height,\r\n        editBtn: state.locationPage.editBtn\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    getLocationThunk,\r\n    setLocationHeight,\r\n    setLocationEdit,\r\n})(LocationContainer)","import React from 'react';\r\nimport Header from './components/Header/Header';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport NavbarContainer from './components/Navbar/NavbarContainer';\r\nimport StaffContainer from './components/Staff/StaffContainer';\r\nimport { Route } from 'react-router-dom';\r\nimport LocationContainer from './components/Location/LocationContainer';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  sidebar: {\r\n    background: '#F5F7FA',\r\n    height: '91vh',\r\n    maxWidth: '80px',\r\n  }\r\n}));\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={12}>\r\n        <Header />\r\n      </Grid>\r\n\r\n      <Grid item xs={3} sm={1} className = {classes.sidebar}>\r\n        \r\n      </Grid>\r\n\r\n      <Grid item xs={9} sm={11} >\r\n \r\n          <NavbarContainer/>\r\n            <Route exact path = '/location'\r\n                  render = { () => <LocationContainer /> }/>\r\n\r\n            <Route exact path = '/'\r\n                  render = { () =>  <StaffContainer /> }/>\r\n         \r\n        \r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, createStore, combineReducers } from 'redux';\r\nimport staffReducer from './staff-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport locationReducer from './location-reducer';\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    staffPage: staffReducer,\r\n    locationPage: locationReducer,\r\n    form: formReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux-store';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter basename = {process.env.PUBLIC_URL  }>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}