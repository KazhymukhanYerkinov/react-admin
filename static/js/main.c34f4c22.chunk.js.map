{"version":3,"sources":["components/Project/ProjectItem/ProjectItem.module.css","components/Project/ProjectToggle/ProjectToggle.module.css","validators/validator.js","common/FormControl/FormControl.jsx","components/Staff/ToggleFooter/ToggleFooter.jsx","api/api.js","redux/staff-reducer.js","components/Staff/ToggleFooter/ToggleFooterContainer.jsx","components/Staff/StaffItem/StaffItem.jsx","components/Staff/Pagination/Pagination.jsx","common/Preloader/Preloader.jsx","components/Staff/Staff.jsx","components/Staff/StaffContainer.jsx","components/Header/TabsChoose/TabsChoose.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Request/Pagination/Pagination.jsx","components/Request/RequestItem/RequestItem.jsx","components/Request/Requset.jsx","redux/request-reducer.js","components/Request/RequestContainer.jsx","components/Navbar/Navbar.jsx","components/Project/ProjectItem/ProjectItem.jsx","redux/project-reducer.js","components/Project/ProjectNavbar/ProjectNavbar.jsx","components/Project/ProjectNavbar/ProjectNavbarContainer.jsx","components/Project/ProjectToggle/ProjectToggle.jsx","components/Project/ProjectToggle/ProjectToggleContainer.jsx","components/Project/Project.jsx","Auth.js","hoc/WithAuthRedirect.js","redux/auth-reducer.js","components/Signin/SigninModule.jsx","components/Signin/Signin.jsx","components/Signin/SignContainer.jsx","components/ForgotPassword/ForgotPassword.jsx","hoc/Layout.js","redux/app-reducer.js","components/SignUp/SignUp.jsx","components/SignUp/SignUpContainer.jsx","App.js","serviceWorker.js","redux/redux-store.js","index.js","common/FormControl/FormControl.module.css"],"names":["module","exports","required","value","selectRequired","emailRequired","test","phoneRequired","maxLengthCreator","maxLen","length","FormControl","meta","children","hasError","touched","error","className","cls","formControl","metaError","FormSelectControl","input","FormControlEmail","label","invalid","TextField","placeholder","helperText","margin","fullWidth","FormControlPassword","type","FormControlCheckBox","FormControlLabel","control","Checkbox","Input","props","restProps","child","ToggleFooterReduxForm","reduxForm","form","enableReinitialize","editorBtn","class","aria-hidden","onClick","setToggleHeight","onSubmit","handleSubmit","Field","component","name","validate","map","r","l","aria-describedby","React","memo","id","duration","height","setEditorBtn","setShowToggle","formData","toast","configure","updateStaffThunk","initialValues","code","full_name","phone","position","email","level","password","currentPage","page","order","signin","createStaffThunk","showToggle","prevProps","nextProps","instance","axios","baseURL","headers","localStorage","getItem","staffAPI","pageSize","sign","config","get","then","response","data","console","log","delete","role","fetch","method","body","JSON","stringify","authAPI","post","token","requestAPI","accept","initialState","staffs","detailStaff","count","isFetching","setDetailStaff","setIsFetching","getStaffThunk","dispatch","a","results","staffReducer","state","action","connect","staffPage","statusText","reset","stopSubmit","_error","StaffItem","useState","open","setOpen","getDetailStaffThunk","setCurrentPage","deleteStaffThunk","AlertDialog","handleCloseDis","Dialog","onClose","aria-labelledby","DialogTitle","DialogActions","Button","color","pagesCount","Math","ceil","pages","maxLeft","floor","maxRight","i","push","href","aria-label","p","Preloader","width","viewBox","x","y","fill","attributeName","from","to","dur","repeatCount","handleCode","e","icon","document","querySelectorAll","currentTarget","classList","toggle","contains","remove","add","getAttribute","staffItem","useCallback","staff","Box","variant","aria-controls","scope","colspan","compose","useEffect","withStyles","root","flexGrow","backgroundColor","tabs","textColors","tabses","padding","setState","classes","Paper","elevation","Tabs","onChange","event","centered","indicator","Tab","textLogin","marginRight","fontFamily","fontSize","float","user","AppBar","Toolbar","Avatar","alt","authPage","Pagination","getRequests","AlertShow","handleCloseNo","handleAccept","RequestItem","acceptRequest","acceptClick","success","Request","requestItems","requests","u","requestReducer","requestPage","useStyles","makeStyles","theme","navlink","marginLeft","links","span","bottom_admin","marginTop","admin_text","lineHeight","Navbar","styles","display","xmlns","rx","fill-rule","clip-rule","d","top100Films","title","year","ProjectItem","app_project_item","data-toggle","data-target","aria-expanded","style","data-parent","Autocomplete","multiple","size","options","getOptionLabel","option","defaultValue","renderInput","params","app_progress","aria-valuenow","aria-valuemin","aria-valuemax","setProjectToggleHeight","projectReducer","ProjectNavbar","ProjectToggle","app_footer","projectPage","Project","Component","isAuth","Grid","container","spacing","item","xs","sm","path","render","access","refresh","isOpen","setIsOpen","chackAuth","load_user","payload","authReducer","setItem","removeItem","card","overflow","session","zIndex","minHeight","flexDirection","background","palette","primary","main","content","alignItems","justifyContent","flex","textAlign","wrapper","maxWidth","logo","buttonText","errorMessage","border","maxLength10","SigninReduxForm","classNames","Typography","Signin","Card","CardContent","login","ForgotPassword","textField","fetchData","initialized","appReducer","SignUpReduxForm","SuccessSignUp","SignUp","signup","re_password","res","App","this","initalizeApp","exact","appPage","promise","Promise","all","Boolean","window","location","hostname","match","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","basename","process","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c34f4c22.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app_progress\":\"ProjectItem_app_progress__S3kuG\",\"app_project_item\":\"ProjectItem_app_project_item__3xIdn\",\"app_icon_angle\":\"ProjectItem_app_icon_angle__32Jp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app_footer\":\"ProjectToggle_app_footer__2iPl1\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Поле, обязательное для заполнения\";\r\n}\r\nexport const selectRequired = value => {\r\n    if (value) return undefined\r\n    return \"Выберите один из них\";\r\n}\r\n\r\nexport const emailRequired = value => {\r\n    if (value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) return \"Invalid email address\";\r\n    else if (!value) return \"Поле, обязательное для заполнения\"\r\n}\r\n\r\nexport const phoneRequired = value => {\r\n    if (value && !/^(0|[1-9][0-9]{5,15})$/i.test(value)) return \"Invalid phone number, must be 10 digits\";\r\n    return undefined;\r\n}\r\n\r\n// export const match = (matchName) => (value, allValues) => {\r\n//     return value !== allValues[matchName]? `This field must match with ${matchName} field`:undefined;\r\n// }\r\n\r\n// export const confirmPass = value => {\r\n//     debugger;\r\n//     if (value.password !== value.re_password) {\r\n//         return \"Hello\"\r\n//     }\r\n// }\r\n\r\nexport const maxLengthCreator = (maxLen) => (value) => {\r\n    if (value.length > maxLen) return `Max length is ${maxLen} symbols`\r\n    return undefined;   \r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport cls from './FormControl.module.css';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\n\r\n\r\nconst FormControl = ({meta, children}) => {\r\n    const hasError  = meta.touched && meta.error;\r\n    return (\r\n        <div className = {cls.formControl + \" \" + (hasError ? cls.error: \"\")}>\r\n            <div>\r\n                { children }\r\n            </div>\r\n\r\n            {hasError && <span className = { cls.metaError }> {meta.error} </span>}\r\n        </div>\r\n    )\r\n}\r\nexport const FormSelectControl = ({input, meta, children}) => {\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className = {cls.formControl + \" \" + (hasError ? cls.error: \"\")}>\r\n            <div>\r\n                <select {...input} className = 'form-control'>\r\n                    { children }            \r\n                </select>\r\n            </div>\r\n\r\n            {hasError && <span className = { cls.metaError }> {meta.error} </span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const FormControlEmail = ({ label, input, meta: { touched, invalid, error } }) => {\r\n    return (\r\n        <>\r\n        <TextField \r\n            label = { label }\r\n            placeholder = { label }\r\n            error = { touched && invalid }\r\n            helperText={touched && error}\r\n            margin=\"normal\"\r\n            fullWidth\r\n            {...input}/>\r\n        </>   \r\n    )\r\n}\r\nexport const FormControlPassword = ({ label, input, meta: { touched, invalid, error } }) => {\r\n    return (\r\n        <>\r\n        <TextField \r\n            label = { label }\r\n            type = \"password\"\r\n            placeholder = { label }\r\n            error = { touched && invalid }\r\n            helperText={touched && error}\r\n            margin=\"normal\"\r\n            fullWidth\r\n            {...input}/>\r\n        </>   \r\n    )\r\n}\r\n\r\nexport const FormControlCheckBox = ({ input, label }) => {\r\n    return (\r\n        <FormControlLabel\r\n            control={<Checkbox value=\"checkedA\" />}\r\n            label= { label } \r\n            className = {cls.fullWidth}\r\n            { ...input }/>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const Input = (props) => {\r\n\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}>      <input {...input} {...restProps} />    </FormControl>\r\n}\r\n","import React from 'react';\r\nimport './ToggleFooterModule.css';\r\nimport AnimateHeight from 'react-animate-height';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { required, selectRequired } from '../../../validators/validator';\r\nimport { FormSelectControl, Input } from '../../../common/FormControl/FormControl';\r\n\r\n\r\n\r\n\r\n\r\nconst ToggleFooterForm = (props) => {\r\n\r\n\r\n\r\n    const role = ['Backend-Developer', 'Frontend-Developer', 'Fullstack-Developer', 'Менеджер'];\r\n    const level = ['Администратор', 'Супер Администратор', 'Пользователь'];\r\n\r\n    \r\n\r\n    const handleClick = () => {\r\n        props.setToggleHeight(0); \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className = \"d-flex justify-content-between p-2 top-foter\">\r\n                <div>\r\n                    {props.editorBtn ? <span className = \"staf_text p-2\"> Изменить </span>: <span className = \"staf_text p-2\"> Добавить нового сотрудника </span>}\r\n                </div>\r\n\r\n                {props.error && <div className = 'app-toogle-div-error p-1'>\r\n                    <span className = 'app-toggle-icon'>  <i class=\"fa fa-ban\" aria-hidden=\"true\"></i>  </span>\r\n                    <span className = 'app-toggle-error'>  {props.error} </span>\r\n                </div>}\r\n\r\n                <div>\r\n                    <button className = 'btn app-toggle-close' onClick = {  handleClick  }> &times; </button>\r\n                </div>\r\n            </div>\r\n            <form onSubmit = { props.handleSubmit }> \r\n                    \r\n                <div className = \"row p-2 pl-5 pr-5\">   \r\n                    <div className = \"col-md-3\">\r\n                        <h6>Ф.И.О</h6>\r\n                        <Field type=\"text\" component = {Input} className = \"form-control\" placeholder=\"Username\" name = {'full_name'} validate = { required } /> \r\n                            \r\n                        <h6 className = \"mt-2\">Телефон номера</h6>\r\n                        <Field type=\"tel\" component = {Input} className = \"form-control\" placeholder=\"8 777 456 23 23\" name = {'phone'} validate = { required }/>\r\n                    </div> \r\n\r\n                    <div className = \"col-md-3\">\r\n                        <h6>Должность</h6>\r\n                        <Field  className=\"form-control\" name = {'position'} component = {FormSelectControl} validate = {selectRequired}>\r\n                            <option value = ''></option>\r\n                            {role.map(r => <option value = {r}> {r} </option>)}\r\n                        </Field>\r\n\r\n                        <h6 className = \"mt-2\">Электронный адрес</h6>\r\n                        <Field type=\"email\" component = {Input} className = 'form-control' name = {'email'} placeholder = \"Электронный адрес\" validate = { required } />\r\n                    </div>\r\n\r\n                    <div className = \"col-md-3\">\r\n                        <h6>Уровень Доступа</h6>\r\n                        <Field className = \"form-control\" name = {'level'} component = {FormSelectControl} validate = {selectRequired}>\r\n                            <option></option>\r\n                            {level.map(l => <option value = {l}> {l} </option>)}\r\n                        </Field>\r\n\r\n                        <h6 className = \"mt-2\"> Пароль </h6>\r\n                        <Field type=\"text\" component = {Input} className = 'form-control' name = {'password'} placeholder = \"Пароль\" validate = { required } />\r\n            \r\n                       \r\n                        \r\n                    </div>\r\n\r\n                    <div className = \"col-md-3 mt-4\">\r\n                        \r\n                        {props.editorBtn ? <button className = \"btn btn-primary  btn-block\" aria-describedby=\"basic-addon1\"> Изменить </button>:\r\n                                                <button className = \"btn btn-primary  btn-block\" aria-describedby=\"basic-addon1\"> Добавить </button>}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst ToggleFooterReduxForm = reduxForm({ form: 'staff', enableReinitialize: true})(ToggleFooterForm);\r\n\r\n\r\n\r\n\r\nconst ToggleFooter =  (props) => {\r\n    \r\n\r\n    \r\n\r\n    const onSubmit = (formData) => {\r\n        \r\n        toast.configure();\r\n        if (props.editorBtn) props.updateStaffThunk(props.initialValues.code, formData.full_name, formData.phone, formData.position, formData.email, formData.level, formData.password, props.currentPage, props.page, props.order, props.signin);\r\n        else {\r\n            props.createStaffThunk(formData.full_name, formData.phone, formData.position, formData.email, formData.level, formData.password, props.currentPage, props.page, props.order,  props.signin);   \r\n                   \r\n        }   \r\n    }\r\n\r\n\r\n    return (\r\n        <div className = \"fixed-bottom foter\">  \r\n            \r\n            <AnimateHeight\r\n                id='example-panel'\r\n                duration={ 500 }\r\n                height={ props.height }r\n                    \r\n                    <ToggleFooterReduxForm setToggleHeight = {props.setToggleHeight}\r\n                                  setEditorBtn = {props.setEditorBtn}\r\n                                  setShowToggle = {props.setShowToggle}\r\n                                  onSubmit = { onSubmit }\r\n\r\n                                  initialValues = {props.initialValues}\r\n                                  editorBtn = {props.editorBtn}\r\n                                  height = {props.height}\r\n                                  showToggle = {props.showToggle}\r\n                                  />  \r\n                \r\n            </AnimateHeight>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nconst areEquals = (prevProps, nextProps) => {\r\n    return prevProps.editorBtn === nextProps.editorBtn && prevProps.height === nextProps.height && prevProps.initialValues === nextProps.initialValues\r\n}\r\n\r\nexport default React.memo(ToggleFooter, areEquals);","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: `https://dashboard-i-con.herokuapp.com/`,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n        'Accept': 'application/json'\r\n    }\r\n});\r\n\r\nexport const staffAPI = {\r\n    getStaffs(currentPage, pageSize, order, sign) {\r\n        const config = {\r\n            headers: {\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        }\r\n        return instance.get(`api/accounts/list?page=${currentPage}&page_size=${pageSize}&order=${order}&sign=${sign}`, config).then(response => {\r\n            return response.data;\r\n        });\r\n    },\r\n    getStaffsDetail(code){\r\n\r\n        return instance.get(`api/accounts/detail/${code}`).then(response => {\r\n            console.log(response.data);\r\n            return response.data;\r\n        })\r\n    },\r\n\r\n    deleteStaff(code) {\r\n        const config = {\r\n            headers: {\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        }\r\n        return instance.delete(`api/accounts/delete/${code}`, config);\r\n    },\r\n\r\n    updateStaff(code, name, phone, role, email, level, password) {\r\n\r\n        return fetch(`https://dashboard-i-con.herokuapp.com/api/accounts/update/${code}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({\r\n                full_name: name,\r\n                position: role,\r\n                level: level,\r\n                phone: phone,\r\n                email: email,  \r\n                password: password,\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n\r\n        })\r\n    },\r\n    createStaffs(name, phone, role, email, level, password){\r\n        return fetch(`https://dashboard-i-con.herokuapp.com/api/accounts/create`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                full_name: name,\r\n                position: role,\r\n                level: level,\r\n                phone: phone,\r\n                email: email,  \r\n                password: password,\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    login(email, password){\r\n        const body = JSON.stringify({ email, password });\r\n\r\n        return instance.post(`api/auth/jwt/create`, body).then(response => {\r\n            return response.data;\r\n        })\r\n    },\r\n    getUser() {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n        return instance.get(`api/auth/users/me`, config).then(response => {\r\n            return response.data;\r\n        })\r\n    },\r\n    checkAuth() {\r\n        const body = JSON.stringify({ token: localStorage.getItem('access') });          \r\n        return instance.post(`api/auth/jwt/verify`, body).then(response => {\r\n            return response;\r\n        })\r\n    },\r\n    createUser(email, full_name, phone, password, re_password) {\r\n        const body = JSON.stringify({ email, full_name, phone, password, re_password })\r\n        return instance.post(`api/auth/users`, body).then(res => {\r\n            return res.data;\r\n        })\r\n    }\r\n}\r\n\r\nexport const requestAPI = {\r\n    getRequests(currentPage, page) {\r\n        const config = {\r\n            headers: {\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        }\r\n        return instance.get(`api/accounts/requests?page=${currentPage}&page_size=${page}`, config).then(response => {\r\n            return response.data;\r\n        });\r\n    },\r\n    checkRequest(accept, code) {\r\n        const config = {\r\n            headers: {\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            }\r\n        }\r\n        const body = JSON.stringify({ accept, code  });\r\n        return instance.post(`api/accounts/accept`, body, config).then(response => {\r\n            return response;\r\n        })\r\n    }\r\n\r\n}","\r\nimport { staffAPI } from \"../api/api\";\r\nimport { stopSubmit, reset } from 'redux-form';\r\n\r\nconst SET_TOGGLE_HEIGHT = 'SET_TOGGLE_HEIGHT';\r\nconst SET_EDITOR_BUTTON = 'SET_EDITOR_BUTTON';\r\n\r\nconst SET_STAFFS = 'SET_STAFFS';\r\nconst SET_STAFF_DETAIL = 'SET_DETAIL_STAFF';\r\n\r\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\n\r\nconst SET_STAFFS_IS_FETCHING = 'SET_STAFFS_IS_FETCHING';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// order and sigin add\r\n// pages 2 dynamicaly\r\n// optimization height + editorBtn //  detailStaff check in\r\n\r\nlet initialState = {\r\n\r\n    height: 0,\r\n    editorBtn: false,\r\n    \r\n\r\n    staffs: [],\r\n    detailStaff: {},\r\n\r\n\r\n    currentPage: 1,\r\n    count: 200,\r\n    page: 10,\r\n\r\n    isFetching: false,\r\n\r\n\r\n    \r\n\r\n\r\n}\r\n\r\nconst staffReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_TOGGLE_HEIGHT:\r\n            return {\r\n                ...state,\r\n                height: action.height\r\n            }\r\n        case SET_STAFFS:\r\n            return {\r\n                ...state,\r\n                staffs: action.staffs\r\n            }\r\n        case SET_TOTAL_COUNT:\r\n            return {\r\n                ...state,\r\n                count: action.count\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_EDITOR_BUTTON:\r\n            return {\r\n                ...state,\r\n                editorBtn: action.editorBtn\r\n            }\r\n        case SET_STAFF_DETAIL:\r\n            return {\r\n                ...state,\r\n                detailStaff: action.detailStaff\r\n            }\r\n        case SET_STAFFS_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            }\r\n\r\n        \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setToggleHeight = (height) => ({ type: SET_TOGGLE_HEIGHT, height });\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const setEditorBtn = (editorBtn) => ({ type: SET_EDITOR_BUTTON, editorBtn });\r\nexport const setDetailStaff = (detailStaff) => ({ type: SET_STAFF_DETAIL, detailStaff });\r\n\r\n\r\nconst setStaffs = (staffs) => ({ type: SET_STAFFS, staffs });\r\nconst setTotalCount = (count) => ({ type: SET_TOTAL_COUNT, count });\r\nconst setIsFetching = (isFetching) => ({ type: SET_STAFFS_IS_FETCHING, isFetching });\r\n\r\n\r\n\r\n\r\n\r\nexport const getStaffThunk = (currentPage, pageSize, order, sign) => async (dispatch) => {\r\n    dispatch(setIsFetching(true));\r\n    let data = await staffAPI.getStaffs(currentPage, pageSize, order, sign);\r\n    dispatch(setTotalCount(data.count));\r\n    dispatch(setStaffs(data.results));\r\n    dispatch(setIsFetching(false));\r\n\r\n}\r\n\r\nexport const createStaffThunk = (full_name, phone, position, email, level,password, currentPage, pageSize, order, sign) => async (dispatch) => {\r\n\r\n    \r\n    let res = await staffAPI.createStaffs(full_name, phone, position, email, level, password);\r\n\r\n    if (res.statusText === 'Created') {\r\n        dispatch(getStaffThunk(currentPage, pageSize, order, sign));\r\n        dispatch(reset('staff'))\r\n    }\r\n        \r\n    else {\r\n        dispatch(stopSubmit(\"staff\", {_error: \"Номер телефона и адрес электронной почты не должны повторяться ! ! !\"}));                   \r\n    }\r\n\r\n    \r\n    \r\n}\r\n\r\nexport const updateStaffThunk = (code, name, phone, role, email, level, password, currentPage, pageSize, order, sign) => async (dispatch) => {\r\n    await staffAPI.updateStaff(code, name, phone, role, email, level, password);\r\n    dispatch(getStaffThunk(currentPage, pageSize, order, sign));\r\n}\r\n\r\nexport const deleteStaffThunk = (code, currentPage, pageSize, order, signin) => async (dispatch) => {\r\n    await staffAPI.deleteStaff(code);\r\n    dispatch(getStaffThunk(currentPage, pageSize, order, signin))\r\n    \r\n}\r\n\r\nexport const getDetailStaffThunk = (code) => async (dispatch) => {\r\n    let data = await staffAPI.getStaffsDetail(code);\r\n    dispatch(setDetailStaff(data));\r\n} \r\n\r\n\r\n\r\nexport default staffReducer;\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ToggleFooter from './ToggleFooter';\r\nimport { setToggleHeight, createStaffThunk, updateStaffThunk, setEditorBtn } from '../../../redux/staff-reducer';\r\n\r\n\r\n\r\nconst ToggleFooterContainer = (props) => {\r\n\r\n    return <ToggleFooter setToggleHeight = {props.setToggleHeight}\r\n                         setEditorBtn = {props.setEditorBtn}\r\n                         createStaffThunk = {props.createStaffThunk}\r\n                         updateStaffThunk = {props.updateStaffThunk}\r\n\r\n\r\n                         initialValues = {props.initialValues}\r\n                         editorBtn = {props.editorBtn}\r\n                         height = {props.height}\r\n\r\n\r\n                         currentPage = {props.currentPage}\r\n                         page = {props.page }\r\n                         order = {props.order}\r\n                         signin = {props.sign}\r\n\r\n                         />\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n\r\n        height: state.staffPage.height,\r\n        currentPage: state.staffPage.currentPage,\r\n        page: state.staffPage.page,\r\n        editorBtn: state.staffPage.editorBtn,\r\n\r\n        initialValues: {\r\n            code: state.staffPage.detailStaff.code,\r\n            full_name: state.staffPage.detailStaff.full_name,\r\n            position: state.staffPage.detailStaff.position,\r\n            phone: state.staffPage.detailStaff.phone,\r\n            email: state.staffPage.detailStaff.email,\r\n            level: state.staffPage.detailStaff.level,\r\n        }\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    setToggleHeight,\r\n    createStaffThunk,\r\n    updateStaffThunk,\r\n    setEditorBtn,\r\n})(ToggleFooterContainer);","import React, { useState } from 'react';\r\nimport '../StaffModule.css'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\n\r\n\r\n\r\nconst StaffItem = (props) => {\r\n    \r\n\r\n    \r\n    const [open, setOpen] = useState(false);\r\n\r\n   \r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <tr>\r\n            <td > { props.code } </td>\r\n            <td> { props.full_name }</td>\r\n            <td> { props.position } </td>\r\n            <td> { props.phone } </td>\r\n            <td> { props.email } </td>\r\n            <td> <i class=\"material-icons\" onClick = { () => {props.setEditorBtn(true)\r\n                                                              props.setToggleHeight(250)\r\n                                                              props.getDetailStaffThunk(props.code)}}> mode_edit </i> </td>\r\n            <td> <i class=\"material-icons app-staff-delete\" onClick = { handleClickOpen }>delete</i>  </td>\r\n        </tr>\r\n\r\n        {open && <AlertDialog open = { open } setOpen = { setOpen } count = {props.count}\r\n                              page = { props.page } setCurrentPage = { props.setCurrentPage } deleteStaffThunk = {props.deleteStaffThunk}\r\n                              order = { props.order } sign = { props.sign } currentPage = { props.currentPage } code = {props.code} />}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default StaffItem;\r\n\r\nconst AlertDialog = (props) => {\r\n\r\n\r\n    //////////////////  DELETE BUTTON /////////////////////////////\r\n    const handleDelete = (code, currentPage) => {\r\n        if (props.count > props.page) {\r\n            const temp = props.count % props.page;\r\n            if (temp === 1) {\r\n                props.setCurrentPage(currentPage - 1)\r\n                props.deleteStaffThunk(code, currentPage - 1, props.page, props.order, props.sign)\r\n            }\r\n            else {\r\n                props.deleteStaffThunk(code, currentPage, props.page, props.order, props.sign)\r\n            }\r\n        }\r\n        else {\r\n            props.deleteStaffThunk(code, currentPage, props.page,  props.order, props.sign)\r\n        }\r\n    }\r\n\r\n\r\n    const handleClose = () => {\r\n        props.setOpen(false);\r\n        handleDelete(props.code, props.currentPage)\r\n\r\n    }\r\n\r\n    const handleCloseDis = () => {\r\n        props.setOpen(false);\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open = { props.open }\r\n                onClose = { handleCloseDis }\r\n                aria-labelledby = \"alert-dialog-title\">\r\n\r\n                <DialogTitle id=\"alert-dialog-title\"> {\"Вы уверены, что хотите удалить этот элемент?\"} </DialogTitle>\r\n\r\n                <DialogActions>\r\n                    <Button onClick={handleCloseDis} color=\"secondary\">\r\n                        Нет\r\n                    </Button>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Да\r\n                    </Button>\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\n\r\nconst Pagination = (props) => {\r\n\r\n    //////////// PAGINATION LOGIC //////////////////\r\n    let pagesCount = Math.ceil(props.count / props.page);\r\n    let pages = [];\r\n\r\n    let maxLeft = (props.currentPage - Math.floor(5 / 2));\r\n    let maxRight = (props.currentPage + Math.floor( 5 / 2));\r\n\r\n    if (maxLeft < 1) {\r\n        maxLeft = 1;\r\n        maxRight = 5;\r\n    }\r\n    if (maxRight > pagesCount) {\r\n        maxLeft = pagesCount - (5 - 1);\r\n\r\n        if (maxLeft < 1) {\r\n            maxLeft = 1;\r\n        }\r\n        maxRight = pagesCount\r\n    }\r\n\r\n    for (let i = maxLeft; i <= maxRight; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <nav className = 'ml-5'>\r\n            <ul className = 'pagination justify-content-end'>\r\n                <li class=\"page-item\" onClick = { () => {   props.setCurrentPage(1)\r\n                                                            props.getStaffThunk(1, props.page, props.order, props.sign) }}>\r\n                    <a class=\"page-link\" href=\"#\" aria-label=\"Previous\">\r\n                        <span aria-hidden=\"true\">&laquo; ПЕРВАЯ </span>\r\n                    </a>\r\n                </li>\r\n\r\n                {pages.map(p => {\r\n                    return <li className={`page-item ${props.currentPage === p && 'active'}`} onClick = { () => {   props.setCurrentPage(p)\r\n                                                                                                                    props.getStaffThunk(p, props.page, props.order, props.sign) }}>\r\n                                <a class=\"page-link\" href=\"#\">  {p} </a>\r\n                           </li>\r\n                })}\r\n                \r\n               \r\n                <li class=\"page-item\" onClick = { () => { \r\n                                                        props.setCurrentPage(pagesCount)\r\n                                                        props.getStaffThunk(pagesCount, props.page, props.order, props.sign) }}>\r\n                <a class=\"page-link\" href=\"#\" aria-label=\"Next\">\r\n                    <span aria-hidden=\"true\">ПОСЛЕДНЯЯ &raquo;</span>\r\n                </a>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n\r\n}\r\nconst areEqual = (prevProps, nextProps) => {\r\n    let isEqual = prevProps.page === nextProps.page && prevProps.count === nextProps.count && prevProps.currentPage === nextProps.currentPage;\r\n    return isEqual;\r\n}\r\nexport default React.memo(Pagination, areEqual);","import React from 'react';\r\nimport './PreloaderModule.css';\r\n\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className = 'app-preloader'>\r\n            <svg width=\"100%\" height=\"200px\" viewBox=\"500 0 500 500\"> \r\n                <rect x=\"0\" y=\"0\" width=\"100px\" height=\"10\" fill=\"#7E98AE\"> \r\n                    <animate attributeName=\"x\" from=\"0\"  to='1000' dur=\"0.4s\" repeatCount=\"indefinite\" />\r\n                    <animate attributeName=\"width\" to=\"500\" dur=\"0.3s\" repeatCount=\"indefinite\" />\r\n                    <animate attributeName=\"fill\" to=\"black\" dur=\"0.3s\" repeatCount=\"indefinite\" />\r\n                </rect> \r\n\t        </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React, { useCallback }  from 'react';\r\nimport './StaffModule.css';\r\nimport ToggleFooterContainer from './ToggleFooter/ToggleFooterContainer';\r\nimport StaffItem from './StaffItem/StaffItem';\r\nimport Pagination from './Pagination/Pagination';\r\nimport { Box ,Button} from '@material-ui/core';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\n\r\n\r\nlet order = '';\r\nlet sign = '';\r\n\r\nconst Staff = (props) => {\r\n\r\n    \r\n    const handleClick = () => {\r\n        props.setDetailStaff({});\r\n        props.setToggleHeight(250);\r\n        props.setEditorBtn(false);\r\n    }\r\n    \r\n\r\n    ///////////// PAGINATION AND SORT  /////////////////////////\r\n    const handleCode = (e) => {\r\n\r\n        let icon = document.querySelectorAll('.fa');\r\n\r\n        for(let i = 0; i < icon.length; i++) {\r\n            if (icon[i] === e.currentTarget) {\r\n                e.currentTarget.classList.toggle('fa-angle-down');\r\n                e.currentTarget.classList.toggle('fa-angle-up');\r\n            }\r\n            else {\r\n                if (icon[i].classList.contains('fa-angle-up')){\r\n                    icon[i].classList.remove('fa-angle-up');\r\n                    icon[i].classList.add('fa-angle-down');\r\n                }\r\n            }\r\n        }\r\n        order = (e.currentTarget.getAttribute('name'));\r\n        sign = (e.currentTarget.classList.contains('fa-angle-up')? '' : '-');\r\n\r\n\r\n        \r\n        props.getStaffThunk(props.currentPage, props.page, order, sign);\r\n    }\r\n    \r\n\r\n    ////////////////////  STAFF ITEMS ///////////////////////////////////\r\n    const staffItem = useCallback(props.staffs.map(  staff => <StaffItem code = {staff.code} \r\n                                                         full_name = {staff.full_name}\r\n                                                         position = {staff.position}\r\n                                                         phone = {staff.phone}\r\n                                                         email = {staff.email}\r\n                                                         setEditorBtn = {props.setEditorBtn}\r\n                                                         setToggleHeight = {props.setToggleHeight}\r\n                                                         getDetailStaffThunk = {props.getDetailStaffThunk}\r\n                                                         deleteStaffThunk = {props.deleteStaffThunk}\r\n                                                         setCurrentPage = { props.setCurrentPage }\r\n                                                         currentPage = { props.currentPage }\r\n                                                         order = { order }\r\n                                                         sign = { sign }\r\n                                                         page = { props.page }\r\n                                                         count = { props.count }\r\n                                                         isFetching = {props.isFetching} />), [props.staffs]);\r\n\r\n    return (\r\n        <>   \r\n        <div className = 'd-flex flex-row-reverse bd-highlight'>\r\n            <Box>\r\n                <Button variant=\"contained\" color=\"primary\" aria-controls='example-panel' onClick = { handleClick }> Добавить нового сотрудника </Button>\r\n            </Box>\r\n        </div>      \r\n        <div className = 'app-staff'>\r\n        \r\n            <table class=\"table table-striped\">\r\n                <thead className = 'app-staff-table-tr'>\r\n                    <tr >\r\n                            <th scope=\"col\"> Код \r\n\r\n                                <i class=\"fa fa-angle-down\" name = 'code' aria-hidden=\"true\" onClick = { handleCode }></i>\r\n \r\n                            </th>\r\n\r\n                            <th scope=\"col\" className = 'app-staff-table-th'>Ф.И.О \r\n                            \r\n                                <i class=\"fa fa-angle-down\" name = 'full_name' aria-hidden=\"true\" onClick = { handleCode }></i>\r\n                                \r\n                            </th>\r\n\r\n\r\n                            <th scope=\"col\" className = 'app-staff-table-th'>Должность\r\n                                \r\n                                <i class=\"fa fa-angle-down\" name = 'position' aria-hidden=\"true\" onClick = { handleCode }></i>\r\n\r\n                            </th>\r\n\r\n\r\n                            <th scope=\"col\" className = 'app-staff-table-th'>Телефон\r\n\r\n                                <i class=\"fa fa-angle-down\" name = 'phone' aria-hidden=\"true\" onClick = { handleCode }></i>\r\n\r\n                            </th>\r\n\r\n\r\n                            <th scope=\"col\" className = 'app-staff-table-th'>E-mail\r\n\r\n                                <i class=\"fa fa-angle-down\" name = 'email' aria-hidden=\"true\" onClick = { handleCode }></i>\r\n\r\n                            </th>\r\n\r\n\r\n                            <th className = 'app-staff-table-th'></th>\r\n                            <th></th>\r\n                    </tr>\r\n                    \r\n                    \r\n                </thead>\r\n                <tbody>\r\n\r\n                    {props.isFetching ? <tr><td colspan=\"7\" className = 'app-staff-preloader'> <Preloader /> </td></tr> : staffItem}\r\n\r\n                </tbody>\r\n                </table>\r\n           \r\n            <div>\r\n                <ToggleFooterContainer order = { order } sign = { sign } />\r\n            </div>\r\n\r\n           \r\n        </div>\r\n        <Pagination order = { order } sign = { sign } page = { props.page } count = { props.count }\r\n                    currentPage = { props.currentPage } setCurrentPage = { props.setCurrentPage } getStaffThunk = { props.getStaffThunk } />\r\n        </>\r\n    );\r\n}\r\nconst areEquals = (prevProps, nextProps) => {\r\n    return prevProps.staffs === nextProps.staffs && prevProps.isFetching === nextProps.isFetching\r\n}\r\n\r\nexport default React.memo(Staff, areEquals);\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Staff from './Staff';\r\nimport { compose } from 'redux';\r\nimport { setCurrentPage, getStaffThunk, setEditorBtn, setToggleHeight, deleteStaffThunk, getDetailStaffThunk, setDetailStaff} from '../../redux/staff-reducer';\r\n\r\n\r\n\r\nconst StaffContainer = (props) => {\r\n\r\n\r\n    \r\n    useEffect( () => {\r\n        props.getStaffThunk(props.currentPage, props.page, '', '');\r\n    }, []);\r\n\r\n    \r\n\r\n    return <Staff currentPage = {props.currentPage}\r\n                  count = {props.count}\r\n                  staffs = {props.staffs}\r\n                  page = {props.page}\r\n                  isFetching = {props.isFetching}\r\n\r\n\r\n                  setCurrentPage = {props.setCurrentPage}\r\n                  setEditorBtn = {props.setEditorBtn}\r\n                  setToggleHeight = {props.setToggleHeight}\r\n                  getStaffThunk = {props.getStaffThunk}\r\n                  getDetailStaffThunk = {props.getDetailStaffThunk}\r\n                  deleteStaffThunk = {props.deleteStaffThunk}\r\n                  setDetailStaff = {props.setDetailStaff}\r\n\r\n                  />\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        currentPage: state.staffPage.currentPage,\r\n        count: state.staffPage.count,\r\n        staffs: state.staffPage.staffs,\r\n        page: state.staffPage.page,\r\n        isFetching: state.staffPage.isFetching,\r\n\r\n    }\r\n}\r\nexport default compose (\r\n    connect(mapStateToProps, {\r\n    setCurrentPage,\r\n    getStaffThunk,\r\n    setEditorBtn,\r\n    setToggleHeight,\r\n    getDetailStaffThunk,\r\n    setDetailStaff,\r\n    deleteStaffThunk}),\r\n    )(StaffContainer);","import React, { useState } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: 'inhert',\r\n    },\r\n    tabs: {\r\n        \r\n        backgroundColor: '#D42D11',\r\n        \r\n    },\r\n    textColors: {\r\n        color: '#D42D11',\r\n    },\r\n    tabses: {\r\n        padding: 20,\r\n    }\r\n}\r\n\r\nconst TabsChoose = (props) => {\r\n    const [state, setState] = useState(0);\r\n\r\n    const handleChange = (event, value) => {                \r\n        setState(value);\r\n    }\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <Paper className = {classes.root}\r\n               elevation={0}>\r\n            <Tabs \r\n                value = {state}\r\n                onChange = { handleChange }\r\n                className = {classes.textColors}\r\n                centered\r\n                classes = {{\r\n                    indicator: classes.tabs\r\n                }}>\r\n\r\n                <Tab label = \"Администрация\"\r\n                     className = {classes.tabses}/>\r\n            </Tabs>\r\n        </Paper>\r\n    );\r\n\r\n}\r\n\r\nexport default withStyles(styles)(TabsChoose);","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Tabs from './TabsChoose/TabsChoose';\r\n\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n        \r\n        \r\n    },\r\n    textLogin: {\r\n        marginRight: 12,   \r\n        fontFamily: 'SF UI Display',   \r\n    },\r\n    name: {\r\n        fontSize: 15,\r\n        color: '#003360',\r\n        \r\n    },\r\n    role: {\r\n        fontSize: 12,\r\n        float: 'right',\r\n        color: '#8AA1C1',\r\n    }\r\n    \r\n}\r\nconst Header = (props) => {\r\n    \r\n    if (!props.user) {\r\n        return <div></div>\r\n    }\r\n   \r\n    const { classes } = props;\r\n    return (\r\n        <div >\r\n            <AppBar position = 'sticky'\r\n                    color = 'white'\r\n                    className = {classes.root}>\r\n                <Toolbar variant = \"dense\">\r\n                    <Tabs />\r\n                    \r\n                    <div className = {classes.textLogin}>\r\n                        <span className = {classes.name}> {props.user.full_name}</span> <br/>\r\n                        \r\n                        <span className = {classes.role}> {props.user.level} </span>\r\n                    </div>\r\n\r\n                    \r\n                    <Avatar alt = \"Role Role\" />\r\n                </Toolbar>                          \r\n            </AppBar>\r\n\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Header);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\n\r\n\r\n\r\nconst HeaderContainer = (props) => {\r\n    return <Header user = {props.user} />\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    user: state.authPage.user,\r\n})\r\nexport default connect(mapStateToProps, {})(HeaderContainer);","import React from 'react';\r\n\r\n\r\nconst Pagination = (props) => {\r\n    \r\n    let pagesCount = Math.ceil(props.count / props.page);\r\n\r\n    let pages = [];\r\n\r\n    let maxLeft = (props.currentPage - Math.floor(5 / 2));\r\n    let maxRight = (props.currentPage + Math.floor( 5 / 2));\r\n\r\n    if (maxLeft < 1) {\r\n        maxLeft = 1;\r\n        maxRight = 5;\r\n    }\r\n    if (maxRight > pagesCount) {\r\n        maxLeft = pagesCount - (5 - 1);\r\n\r\n        if (maxLeft < 1) {\r\n            maxLeft = 1;\r\n        }\r\n        maxRight = pagesCount\r\n    }\r\n\r\n    for (let i = maxLeft; i <= maxRight; i++) {\r\n        pages.push(i);\r\n    }\r\n   \r\n    if (props.count === 0) {\r\n        return <div></div>\r\n    }\r\n    \r\n    return (\r\n        <nav aria-label=\"Page navigation example\">\r\n                <ul class=\"pagination justify-content-end\">\r\n                    <li class=\"page-item\" onClick = { () => {   props.setCurrentPage(1)\r\n                                                                props.getRequests(1, props.page) }}>\r\n                        <a class=\"page-link\" href=\"#\" aria-label=\"Previous\">\r\n                            <span aria-hidden=\"true\">&laquo; ПЕРВАЯ</span>\r\n                            <span class=\"sr-only\">Previous</span>\r\n                        </a>\r\n                    </li>\r\n\r\n                    {pages.map(p => {\r\n                        return <li className={`page-item ${props.currentPage === p && 'active'}`} onClick = { () => { props.setCurrentPage(p)\r\n                                                                                                                      props.getRequests(p, props.page) }}>\r\n                                    <a class=\"page-link\" href=\"#\">  {p} </a>\r\n                                </li>\r\n                    })}\r\n\r\n\r\n                   \r\n\r\n                    <li class=\"page-item\" onClick = { () => {   props.setCurrentPage(pagesCount)\r\n                                                                props.getRequests(pagesCount, props.page) }}>\r\n                        <a class=\"page-link\" href=\"#\" aria-label=\"Next\">\r\n                            <span aria-hidden=\"true\"> ПОСЛЕДНЯЯ &raquo;</span>\r\n                            <span class=\"sr-only\">Next</span>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst RequestItem = (props) => {\r\n\r\n\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleAccept = (accept) => {\r\n        if (props.count > props.page) {\r\n            const temp = props.count % props.page;\r\n            if (temp === 1) {\r\n                props.setCurrentPage(props.currentPage - 1)\r\n                props.acceptRequest(accept, props.code, props.currentPage - 1, props.page);\r\n                \r\n            }\r\n            else {\r\n                props.acceptRequest(accept, props.code, props.currentPage, props.page);\r\n            }\r\n        }\r\n        else {\r\n            props.acceptRequest(accept, props.code, props.currentPage, props.page);\r\n        }\r\n    }\r\n\r\n    const acceptClick = (accept) => {\r\n        toast.configure();\r\n\r\n        if (accept){\r\n            handleAccept(true)\r\n            toast.success(\"Элемент успешно добавлен\", {position: \"bottom-center\"})\r\n        }\r\n        else {\r\n            setOpen(true);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <tr>\r\n            <td>{props.code}</td>\r\n            <td>{props.full_name}</td>\r\n            <td>{props.email}</td>\r\n            <td>{props.phone}</td>\r\n            <td></td>\r\n            <td></td>\r\n            <td> <i class=\"fa fa-check mr-5\" aria-hidden=\"true\" onClick = {() => acceptClick(true)}></i> \r\n                 <i class=\"fa fa-times\" aria-hidden=\"true\" onClick = {() => acceptClick(false)}></i> \r\n            </td>\r\n        </tr>\r\n\r\n\r\n        {open && <AlertShow open = { open } setOpen = { setOpen }  handleAccept = { handleAccept } />}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst AlertShow = (props) => {\r\n\r\n    \r\n\r\n    const handleCloseYes = () => {\r\n        props.setOpen(false);\r\n        props.handleAccept(false);\r\n    }\r\n\r\n    const handleCloseNo = () => {\r\n        props.setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open = { props.open }\r\n                onClose = { handleCloseNo }\r\n                aria-labelledby = \"alert-dialog-title\">\r\n\r\n                <DialogTitle id=\"alert-dialog-title\"> {\"Вы уверены, что хотите удалить этот элемент?\"} </DialogTitle>\r\n\r\n                <DialogActions>\r\n                    <Button onClick={handleCloseNo} color=\"secondary\">\r\n                        Нет\r\n                    </Button>\r\n                    <Button onClick={handleCloseYes} color=\"primary\">\r\n                        Да\r\n                    </Button>\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestItem;","import React from 'react';\r\nimport { useCallback } from 'react';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport Pagination from './Pagination/Pagination';\r\nimport RequestItem from './RequestItem/RequestItem';\r\nimport './RequestModule.css';\r\n\r\n\r\n\r\nconst Request = (props) => {\r\n\r\n    console.log(\"RENDER REQUEST\");\r\n    let requestItems = useCallback(props.requests.map(u => <RequestItem code = {u.code} email = {u.email} full_name = {u.full_name} \r\n                                                            phone = {u.phone} acceptRequest = {props.acceptRequest} setCurrentPage = {props.setCurrentPage}\r\n                                                            count = {props.count} page = {props.page} currentPage = {props.currentPage} />), [props.requests])\r\n\r\n    return (\r\n        <>\r\n        <div className = 'app-request'>\r\n            <table className=\"table table-hover\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\"> Код </th>\r\n                        <th scope=\"col\" className = 'app-request-table-th'> Ф.И.О  </th>\r\n                        <th scope=\"col\" className = 'app-request-table-th'> E-mail </th>\r\n                        <th scope=\"col\" className = 'app-request-table-th'> Телефон </th>\r\n                        <th></th>\r\n                        <th></th>\r\n\r\n                        <th className = 'app-request-table-th'> &nbsp; </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    \r\n                    {props.isFetching ? <tr><td colspan=\"7\" className = 'app-staff-preloader'> <Preloader /> </td></tr>:  requestItems }\r\n                </tbody>\r\n\r\n            </table>\r\n        </div>\r\n        <Pagination currentPage = {props.currentPage} count = {props.count} page = {props.page}\r\n                        setCurrentPage = {props.setCurrentPage} getRequests = {props.getRequests}/>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Request;","import { requestAPI } from \"../api/api\";\r\n\r\nconst SET_REQUEST_CURRENT_PAGE = 'SET_REQUEST_CURRENT_PAGE';\r\nconst SET_REQUEST_COUNT = 'SET_REQUEST_COUNT';\r\nconst SET_REQUESTS = 'SET_REQUESTS';\r\nconst SET_REQUESTS_IS_FETCHING = 'SET_REQUESTS_IS_FETCHING';\r\n\r\n\r\nlet initialState = {\r\n    currentPage: 1,\r\n    count: 0,\r\n    page: 8,\r\n\r\n    requests: [],\r\n\r\n    isFetching: false,\r\n\r\n    \r\n}\r\n\r\n\r\nconst requestReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_REQUEST_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_REQUESTS:\r\n            return {\r\n                ...state,\r\n                requests: action.requests\r\n\r\n            }\r\n        case SET_REQUEST_COUNT:\r\n            return {\r\n                ...state,\r\n                count: action.count\r\n            }\r\n        case SET_REQUESTS_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_REQUEST_CURRENT_PAGE,  currentPage});\r\nconst setRequests = (requests) => ({ type: SET_REQUESTS, requests });\r\nconst setTotalCount = (count) => ({ type: SET_REQUEST_COUNT, count });\r\n\r\nconst setIsFetching = (isFetching) => ({ type: SET_REQUESTS_IS_FETCHING, isFetching })\r\n\r\n\r\nexport const getRequests = (currentPage, page) => async (dispatch) => {\r\n    dispatch(setIsFetching(true));\r\n    let data = await requestAPI.getRequests(currentPage, page);\r\n    dispatch(setRequests(data.results));\r\n    dispatch(setTotalCount(data.count))\r\n    dispatch(setIsFetching(false));\r\n}\r\n\r\nexport const acceptRequest = (accept, code, currentPage, page) => async (dispatch) => {\r\n    let data = await requestAPI.checkRequest(accept, code);\r\n    console.log(data);\r\n    dispatch(getRequests(currentPage, page));\r\n}\r\n\r\nexport default requestReducer;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Request from './Requset';\r\nimport { setCurrentPage, getRequests, acceptRequest } from '../../redux/request-reducer';\r\n\r\n\r\nconst RequestContainer = (props) => {\r\n    useEffect( () => {\r\n        \r\n        props.getRequests(props.currentPage, props.page);\r\n        \r\n    }, [])\r\n\r\n    \r\n    return (\r\n        <>\r\n            <Request currentPage = {props.currentPage}\r\n                            count = {props.count}\r\n                            page = {props.page}\r\n                            isFetching = {props.isFetching}\r\n                            requests = {props.requests}\r\n                            \r\n                            acceptRequest = {props.acceptRequest}\r\n                            setCurrentPage = {props.setCurrentPage}\r\n                            getRequests = {props.getRequests}/>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    currentPage: state.requestPage.currentPage,\r\n    count: state.requestPage.count,\r\n    page: state.requestPage.page,\r\n\r\n    isFetching: state.requestPage.isFetching,\r\n    requests: state.requestPage.requests,\r\n})\r\n\r\nexport default connect(mapStateToProps, {setCurrentPage, getRequests, acceptRequest})(RequestContainer)\r\n","import React from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './NavbarModule.css';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navlink: {\r\n      marginLeft:7,\r\n      marginRight:5,\r\n      fontFamily: 'SFUIDisplay',\r\n      fontSize: '11px',\r\n      color: '#8AA1C1',\r\n      \r\n    },\r\n    links:{\r\n        margin: 15\r\n    },\r\n    span:{\r\n        color: '#8AA1C1', \r\n    },\r\n\r\n    // иконка и текст администрация \r\n    bottom_admin:{\r\n        marginTop:20,\r\n        marginLeft: 15,\r\n        width:'100%'\r\n    },\r\n    admin_text:{\r\n        marginLeft:20,\r\n        lineHeight: '28px',\r\n        fontFamily:'SFUIDisplay',\r\n        fontSize:'24px',\r\n        color:'#003360',\r\n           \r\n    }\r\n\r\n    \r\n  }));\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n    \r\n    \r\n    const styles = useStyles();\r\n    return(\r\n        <div className = {styles.links}>\r\n            \r\n\r\n            <div className = {styles.bottom_admin}>\r\n                <Box display=\"flex\" >\r\n                    <Box flexGrow={1}>\r\n                        {/* ICON SVG */}\r\n                        <span>\r\n                            <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <rect width=\"32\" height=\"32\" rx=\"4\" fill=\"#D42D11\"/>\r\n                                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.008 20H21.3333C21.702 20 22 19.7014 22 19.3334V10.6667C22 9.93137 21.402 9.33337 20.6667 9.33337H12C11.196 9.33337 10 9.86604 10 11.3334V13.3334V17.3334V19.3334V20.6667C10 22.134 11.196 22.6667 12 22.6667H22V21.3334H12.008C11.7 21.3254 11.3333 21.2034 11.3333 20.6667C11.3333 20.13 11.7 20.008 12.008 20ZM11.3333 13.3334V11.3334C11.3333 10.7967 11.7 10.6747 12 10.6667H20.6667V18.6667H11.3333V17.3334V13.3334ZM19.3333 12H13.3333V13.3334H19.3333V12Z\" fill=\"white\"/>\r\n                            </svg>\r\n\r\n                        </span>\r\n                        {/* ADMIN TEXT */}\r\n                        \r\n                        <span className = {styles.admin_text}>Администрация</span>\r\n\r\n                    \r\n                    </Box>\r\n                    \r\n                    \r\n                </Box>\r\n                    \r\n            </div>\r\n\r\n            <div className = \"mt-3 ml-3 w-100  bottom-nav\">\r\n                <ul className=\"nav nav-pills\">\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to = {'/staffs'}>Сотрудники</NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item ml-3\">\r\n                        <NavLink className=\"nav-link \" to = {'/request'}> Запросы </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item ml-3\">\r\n                        <NavLink className=\"nav-link\" to = {'/project'}> Проекты </NavLink>\r\n                    </li>\r\n\r\n                    <li className=\"nav-item ml-3\">\r\n                        <NavLink className=\"nav-link\" to = {'/card'}>Карточка</NavLink>\r\n                    </li>\r\n                </ul>\r\n\r\n            </div>\r\n           \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport cls from './ProjectItem.module.css';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\n\r\nconst ProjectItem = () => {\r\n    console.log(\"Hello\")\r\n    \r\n    const handleCode = (e) => {\r\n        e.currentTarget.classList.toggle('fa-angle-down');\r\n        e.currentTarget.classList.toggle('fa-angle-up');\r\n    }\r\n\r\n    const handleChip = (option, value) => {\r\n        console.log(value.year)\r\n        return option.year === value.year;                                       \r\n    }\r\n    return (\r\n        <div className = {`row ${cls.app_project_item}`}>\r\n            <div className = 'col-md-6 mt-5'>\r\n                <div id=\"accordion\">\r\n                    <div className = 'card'>\r\n                        <div className = {cls.app_project_item} id=\"headingOne\">\r\n                            <h5 class=\"d-flex justify-content-between\">\r\n                                <button class=\"btn\">\r\n                                    JOB PORTAL WEB APP\r\n                                </button>\r\n                                <button class=\"btn\" data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                                    <i className='fa fa-angle-up' style = {{fontSize: '35px'}} name = 'full_name' aria-hidden=\"true\" onClick = { handleCode } ></i>\r\n                                </button>\r\n                            </h5>\r\n                        </div>\r\n                        <div id=\"collapseOne\" class=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#accordion\">\r\n                            <hr />\r\n                            <div class=\"card-body\">\r\n                                <div className = 'mb-4'>\r\n                                    <button type=\"button\" class=\"btn btn-info w-30 btn-sm\"> Android </button>\r\n                                </div>\r\n\r\n                                <div className = 'mt-2'>\r\n                                    <h6> Aperiam deleniti fugit incidunt, iste, itaque minima neque pariatur perferendis temporibus! </h6>\r\n                                </div>\r\n\r\n                                <div className = 'mt-4'>\r\n                                    <table className = 'table-sm table-borderless'>\r\n                                        <tr>\r\n                                            <th className = 'pr-2'> Created: </th>\r\n                                            <td className = 'pl-3'> 09 Jun 2019 11:32AM </td>\r\n                                        </tr>\r\n\r\n                                        <tr>\r\n                                            <th className = 'pr-2'> Creator: </th>\r\n                                            <td className = 'pl-3'> Kazhymukhan Yerkinov </td>\r\n                                        </tr>\r\n\r\n                                        <tr>\r\n                                            <th className = 'pr-2'> Technical task: </th>\r\n                                            <td className = 'pl-3'> Document.pdf </td>\r\n                                        </tr>\r\n\r\n                                        <tr>\r\n                                            <th className = 'pr-2'> Question: </th>\r\n                                            <td className = 'pl-3'> 23 </td>\r\n                                        </tr>\r\n\r\n                                        <tr>\r\n                                            <th className = 'pr-2'> Team: </th>\r\n                                            <td className = 'pl-3'> \r\n                                            <Autocomplete\r\n                                                multiple\r\n                                                fullWidth\r\n                                                \r\n                                                style = {{width: 300}}\r\n                                                id=\"size-small-filled-multi\"\r\n                                                size=\"small\"\r\n                                                options={top100Films}\r\n                                                getOptionLabel={(option) => option.title}\r\n                                                onChange={(event, value) => console.log(value)}\r\n                                                defaultValue={[top100Films[1]]} \r\n                                                \r\n                                                renderInput={(params) => (\r\n                                                    <TextField {...params} variant=\"filled\" label=\"Size small\" placeholder=\"Favorites\" />\r\n                                                  )}\r\n                                                />\r\n                                            </td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </div>\r\n\r\n                                <hr/>\r\n                                <div className = 'd-flex justify-content-between'>\r\n                                    <p> 25% </p>\r\n                                    <p> Progress </p>\r\n                                </div>\r\n                                <div className={`progress ${cls.app_progress}`}>\r\n                                    <div class=\"progress-bar\" role=\"progressbar\" style = {{width: `${25}%`}} aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className = 'col-md-4  mt-5'>\r\n                2\r\n            </div>\r\n\r\n            <div className = 'col-md-4  mt-5'>\r\n                3\r\n            </div>\r\n\r\n            <div className = 'col-md-4  mt-5'>\r\n                4\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nconst top100Films = [\r\n    { title: 'The Shawshank Redemption', year: 1994 },\r\n    { title: 'The Godfather', year: 1972 },\r\n    { title: 'The Godfather: Part II', year: 1974 },\r\n    { title: 'The Dark Knight', year: 2008 }\r\n]\r\n\r\nexport default ProjectItem;\r\n\r\n","const SET_PROJECT_TOGGLE_HEIGHT = 'SET_PROJECT_TOGGLE_HEIGHT';\r\n\r\n\r\n\r\nlet initialState = {\r\n    height: 0,\r\n}\r\n\r\nconst projectReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_PROJECT_TOGGLE_HEIGHT:\r\n            return {\r\n                ...state,\r\n                height: action.height\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setProjectToggleHeight = (height) => ({ type: SET_PROJECT_TOGGLE_HEIGHT, height });\r\n\r\n\r\nexport default projectReducer;","import React from 'react';\r\nimport './ProjectNavbarModule.css';\r\n\r\n\r\nconst ProjectNavbar = (props) => {\r\n    return (\r\n        <div className = 'row'>\r\n            <div className = 'col-md-5'>\r\n\r\n            </div>\r\n            <div class=\"col-md-4 input-group\">\r\n                \r\n                <input class=\"form-control border-right-0 border\" type=\"search\" placeholder = \"Search\"/>\r\n                <span class=\"input-group-append\">\r\n                    <div class=\"input-group-text bg-transparent\"><i class=\"fa fa-search\"></i></div>\r\n                </span>  \r\n            </div>\r\n\r\n            <div className = 'col-md-3'>\r\n                <button type=\"button\" class=\"btn btn-primary w-100\" onClick = {() => {props.setProjectToggleHeight(400)}}> Добавить проект </button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProjectNavbar;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setProjectToggleHeight } from '../../../redux/project-reducer';\r\nimport ProjectNavbar from './ProjectNavbar';\r\n\r\n\r\nconst ProjectNavbarContainer = (props) => {\r\n    return <ProjectNavbar setProjectToggleHeight = {props.setProjectToggleHeight} />\r\n}\r\n\r\n\r\nexport default connect(null, { setProjectToggleHeight })(ProjectNavbarContainer);","import React from 'react';\r\nimport AnimateHeight from 'react-animate-height';\r\nimport cls from './ProjectToggle.module.css';\r\n\r\n\r\nconst ProjectToggle = (props) => {\r\n    return (\r\n        <div className = {`fixed-bottom ${cls.app_footer}`}>\r\n        <AnimateHeight\r\n            duration = { 500 }\r\n            height = { props.height }>\r\n        \r\n            <div className = \"d-flex justify-content-between pl-3 pr-3 pt-3 pb-1\">\r\n                <div>\r\n                    <span className = \"staf_text p-2\"> Добавить нового проекта </span>\r\n                </div>\r\n\r\n                \r\n                <div>\r\n                    <button className = 'btn app-toggle-close' onClick = {() => { props.setProjectToggleHeight(0) }}> &times; </button>\r\n                </div>\r\n            </div>\r\n\r\n            <hr />\r\n\r\n        </AnimateHeight>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectToggle;","import React from 'react';import { connect } from 'react-redux';\r\nimport { setProjectToggleHeight } from '../../../redux/project-reducer';\r\nimport ProjectToggle from './ProjectToggle';\r\n\r\n\r\nconst ProjectToggleContainer = (props) => {\r\n    return <ProjectToggle height = {props.height} setProjectToggleHeight = {props.setProjectToggleHeight} />\r\n}\r\n\r\nlet mapStateToProps = (state) => ({ \r\n    height: state.projectPage.height,\r\n })\r\n\r\nexport default  connect(mapStateToProps, { setProjectToggleHeight })(ProjectToggleContainer)","import React from 'react';\r\nimport './ProjectModule.css'\r\nimport ProjectItem from './ProjectItem/ProjectItem';\r\nimport ProjectNavbarContainer from './ProjectNavbar/ProjectNavbarContainer';\r\nimport ProjectToggleContainer from './ProjectToggle/ProjectToggleContainer';\r\n\r\n\r\n\r\nconst Project = () => {\r\n    return (\r\n        \r\n        <div className = 'app-project'>\r\n            <ProjectNavbarContainer />\r\n            <hr />\r\n            <ProjectItem />\r\n            <ProjectToggleContainer />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Project;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport StaffContainer from './components/Staff/StaffContainer';\r\nimport { compose } from 'redux';\r\nimport { Route } from 'react-router-dom';\r\nimport { WithAuthRedirect } from './hoc/WithAuthRedirect';\r\nimport { connect } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport RequestContainer from './components/Request/RequestContainer';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport Project from './components/Project/Project';\r\n\r\n\r\n\r\n\r\nconst Auth = () => {\r\n    \r\n    return (\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={12}>\r\n            <HeaderContainer />\r\n          </Grid>\r\n\r\n          \r\n\r\n          <Grid item xs={12} sm={12} className = 'pl-4 pr-4'>\r\n  \r\n            <Navbar/>\r\n\r\n            <Route path = '/staffs'\r\n                  render = { () =>  <StaffContainer /> }/>\r\n            <Route path = '/request'\r\n                  render = { () => <RequestContainer />}/>\r\n            <Route path = '/project'\r\n                  render = { () => <Project /> } />\r\n              \r\n          </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default compose(WithAuthRedirect ,connect(null, {}))(Auth);","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n\r\n    let mapStateToForRedirectProps = (state) => {\r\n        return {\r\n            isAuth: state.authPage.isAuth\r\n        }\r\n    }\r\n    const RedirectComponent = (props) => {\r\n\r\n        if (!props.isAuth) return <Redirect to = '/login' />\r\n           \r\n        return <Component {...props} />\r\n    }\r\n\r\n    let ConnectAuthRedirectComponent = connect(mapStateToForRedirectProps)(RedirectComponent);\r\n\r\n    return ConnectAuthRedirectComponent;\r\n}\r\n\r\n","                    import * as axios from 'axios';\r\nimport { authAPI } from \"../api/api\";\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nconst SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nconst SIGN_UP_FAIL = 'SIGN_UP_FAIL';\r\nconst LOGIN_FAIL = 'LOGIN_FAIL';\r\nconst LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nconst LOAD_USER_FAIL = 'LOAD_USER_FAIL';\r\nconst AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\r\nconst AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\r\nconst LOGOUT = 'LOGOUT';\r\n\r\nconst DIALOG_IS_OPEN = 'DIALOG_IS_OPEN';\r\n\r\n\r\n// ACCEPT LIST\r\n\r\nlet initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuth: null,\r\n    user: {},\r\n    isOpen: false,\r\n}\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuth: true\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('refresh', payload.refresh);\r\n            localStorage.setItem('access', payload.access)          \r\n            return {\r\n                ...state,\r\n                isAuth: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh,\r\n            }\r\n        case SIGN_UP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuth: false\r\n            }\r\n        case LOAD_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        case LOAD_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuth: false\r\n            }\r\n        case DIALOG_IS_OPEN:\r\n            return {\r\n                ...state,\r\n                isOpen: action.isOpen\r\n            }\r\n        case SIGN_UP_FAIL:\r\n        case LOGOUT:\r\n        case LOGIN_FAIL:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuth: false,\r\n                user: null,\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setIsOpen = (isOpen) => ({ type: DIALOG_IS_OPEN, isOpen })\r\n\r\nexport const chackAuth = () => async (dispatch) => {\r\n    if (localStorage.getItem('access')) { \r\n        await authAPI.checkAuth();\r\n        dispatch({ type: AUTHENTICATED_SUCCESS });\r\n    }\r\n    else {\r\n        console.log(\"BUL JER EMES\")\r\n    }\r\n}\r\n\r\nexport const load_user = () => async (dispatch) => {\r\n    if (localStorage.getItem('access')) {     \r\n        try {\r\n            const data = await authAPI.getUser();\r\n            dispatch({ type: LOAD_USER_SUCCESS, payload: data })\r\n        } catch (err) {\r\n            dispatch({ type: LOAD_USER_FAIL })\r\n        }\r\n    }\r\n    else {\r\n        dispatch({ type: LOAD_USER_FAIL })\r\n    }\r\n}\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n        try {\r\n            let data = await authAPI.login(email, password);\r\n            dispatch({ type: LOGIN_SUCCESS, payload: data })\r\n            dispatch(load_user());\r\n        }\r\n        catch(err) {\r\n            dispatch(stopSubmit(\"signin\", {_error: \"wrong password or email\"}))\r\n            dispatch({ type: LOGIN_FAIL })\r\n        }    \r\n}\r\n\r\nexport const signup = (email, full_name, phone , password, re_password) => async (dispatch) => {\r\n\r\n    \r\n    if (password === re_password) {\r\n        try {\r\n            const config = {\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n            const body = JSON.stringify({ email, full_name, phone,  password, re_password });\r\n\r\n\r\n            const res = await axios.post(`https://dashboard-i-con.herokuapp.com/api/auth/users/`, body, config)\r\n\r\n            console.log(res);\r\n\r\n            dispatch({ type: SIGN_UP_SUCCESS });\r\n            dispatch(setIsOpen(true));\r\n\r\n        }\r\n        catch (err) {\r\n            dispatch({ type: SIGN_UP_FAIL });\r\n            dispatch(stopSubmit(\"signup\", {_error: \"phone and email unique\"}))\r\n        }\r\n    }\r\n    else {\r\n        dispatch(stopSubmit(\"signup\", {'re_password': \"pass1 and pass2 ten emes\"}))\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    dispatch({\r\n        type: LOGOUT\r\n    })\r\n}\r\n\r\n\r\nexport default authReducer;","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n    card: {\r\n        overflow: \"visible\"\r\n    },\r\n\r\n    session: {\r\n        position: \"relative\",\r\n        zIndex: 4000,\r\n        minHeight: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n\r\n    background: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n\r\n    content: {\r\n        padding: `40px ${theme.spacing(1)}px`,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        flex: \"1 0 auto\",\r\n        flexDirection: \"column\",\r\n        minHeight: \"100%\",\r\n        textAlign: \"center\"\r\n    },\r\n    wrapper: {\r\n        flex: \"none\",\r\n        maxWidth: \"400px\",\r\n        width: \"100%\",\r\n        margin: \"0 auto\"\r\n    },\r\n    logo: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    fullWidth: {\r\n        width: \"100%\",\r\n    },\r\n    buttonText: {\r\n        fontSize: 12,\r\n    },\r\n    errorMessage: {\r\n        color: \"red\",\r\n        border: \"1px solid red\",\r\n        marginTop: \"2%\",\r\n        padding: \"2%\",\r\n    }\r\n}));","import React from 'react';\r\nimport classNames from \"classnames\";\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\n//////// MATERIAL UI //////////////////\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { useStyles } from './SigninModule';\r\nimport { FormControlCheckBox, FormControlEmail, FormControlPassword } from '../../common/FormControl/FormControl';\r\nimport { emailRequired, maxLengthCreator, required } from '../../validators/validator';\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(40);\r\n\r\nconst SigninForm = (props) => {\r\n    const cls = useStyles();\r\n    return (   \r\n        <form onSubmit = {props.handleSubmit}>\r\n\r\n            <div className = {classNames(cls.logo, `text-xs-center pb-xs`)}>\r\n                <Typography variant = \"h6\">\r\n                    CLAY GROUP\r\n                </Typography>\r\n\r\n                <Typography variant = \"caption\">\r\n                    Sign in with your app id to continue.\r\n                </Typography>\r\n\r\n                {props.error && <Typography variant = \"caption\" className = {cls.errorMessage}>\r\n                    {props.error}\r\n                </Typography>}\r\n\r\n\r\n            </div>\r\n\r\n            <Field \r\n                name = {'email'}\r\n                label = \"Email\" \r\n                component = {FormControlEmail} \r\n                validate = { [emailRequired, maxLength10]} />\r\n\r\n\r\n            <Field\r\n                name = {'password'}\r\n                label = \"Password\"\r\n                component = {FormControlPassword}\r\n                validate = { [required, maxLength10] } \r\n            />\r\n\r\n           <Field \r\n                name = {'rememberMe'}\r\n                label = \"Remember me\"\r\n                component = { FormControlCheckBox } \r\n                />\r\n\r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                fullWidth\r\n                type=\"submit\">\r\n                    Login\r\n            </Button>\r\n\r\n            <div className=\"pt-3 d-flex justify-content-center\">\r\n                <NavLink to = \"/forgot\" className = \"mr-5\">\r\n                    <Typography>Forgot password?</Typography>\r\n                </NavLink>\r\n                \r\n                <div> </div> \r\n                <NavLink to = \"/register\">\r\n                    <Typography>Create new account. </Typography>\r\n                </NavLink>\r\n            </div>   \r\n        </form>\r\n    )\r\n}\r\n\r\nconst SigninReduxForm = reduxForm({ form: \"signin\" })(SigninForm);\r\n\r\nconst Signin = (props) => {\r\n    const cls = useStyles();\r\n\r\n    const onSubmit = (formData) => {\r\n       props.login(formData.email, formData.password)\r\n    }\r\n    \r\n    if (props.isAuth) {\r\n        return <Redirect to = '/staffs' />\r\n    }\r\n\r\n    return (\r\n        <div className = {classNames(cls.session, cls.background)}>\r\n            <div className = {cls.content}>\r\n                <div className = {cls.wrapper}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <SigninReduxForm onSubmit = { onSubmit }/>\r\n                        </CardContent>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default Signin;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport Signin from './Signin';\r\n\r\n\r\n\r\nconst SignContainer = (props) => {\r\n    \r\n    return <Signin login = { props.login }\r\n                   isAuth = { props.isAuth } />\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.authPage.isAuth,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { login })(SignContainer)","import Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport classNames from \"classnames\";\r\nimport { useStyles } from \"../Signin/SigninModule\";\r\n\r\n\r\nconst ForgotPassword = () => {\r\n    const cls = useStyles();\r\n    return (\r\n        <div className = {classNames(cls.session, cls.background)}>\r\n            <div className = {cls.content}>\r\n                <div className = {cls.wrapper}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <form>\r\n                                <div className = {classNames(cls.logo, `text-xs-center pb-xs`)}>\r\n                                    <Typography variant = \"h6\">\r\n                                        CLAY GROUP\r\n                                    </Typography>\r\n                                    <Typography variant=\"caption\">\r\n                                        Enter your email and we'll send you instructions on how to\r\n                                        reset your password.\r\n                                    </Typography>\r\n                                </div>\r\n                                \r\n                                <TextField \r\n                                    id=\"email\"\r\n                                    label=\"Email address\"\r\n                                    className={cls.textField}\r\n                                    fullWidth\r\n                                    margin=\"normal\"\r\n                                />\r\n\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    fullWidth\r\n                                    className=\"mt-1\">\r\n                                        Send password reset\r\n                                </Button>\r\n\r\n                                <div className=\"pt-3 d-flex justify-content-center\">\r\n                                    <NavLink to=\"/login\" className = \"mr-5\">\r\n                                        <Typography>Sign</Typography>\r\n                                    </NavLink>\r\n                                   \r\n                                    <NavLink to=\"/register\" className = \"ml-5\">\r\n                                        <Typography>Create new account.</Typography>\r\n                                    </NavLink>\r\n                                </div>\r\n                            </form>\r\n                        </CardContent>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { chackAuth, load_user } from '../redux/auth-reducer';\r\n\r\n\r\nconst Layout = (props) => {\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                await props.load_user();\r\n            } catch (err) {\r\n\r\n            }\r\n        }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {props.children}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default connect(null, { chackAuth, load_user })(Layout);","import { chackAuth } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCESS';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\n\r\n\r\nexport const initalizeApp = () => (dispatch) => {\r\n\r\n    let promise = dispatch(chackAuth());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\nexport default appReducer;","import React from \"react\";\r\nimport { NavLink, Redirect} from \"react-router-dom\";\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport classNames from \"classnames\";\r\nimport { useStyles } from \"../Signin/SigninModule\";\r\nimport { FormControlEmail, FormControlPassword } from \"../../common/FormControl/FormControl\";\r\nimport { emailRequired, maxLengthCreator, phoneRequired, required } from \"../../validators/validator\";\r\n\r\n\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(40);\r\n\r\nconst SignUpForm = (props) => {\r\n\r\n    \r\n    const cls = useStyles();\r\n    return (\r\n        <form onSubmit = {props.handleSubmit}>\r\n\r\n            <div className={classNames(cls.logo, `text-xs-center pb-xs`)}>\r\n                <Typography variant = \"h6\">\r\n                    CLAY GROUP\r\n                </Typography>\r\n                <Typography variant=\"caption\">\r\n                    Create an app id to continue.\r\n                </Typography>\r\n                {props.error && <Typography variant = \"caption\" className = {cls.errorMessage}>\r\n                    {props.error}\r\n                </Typography>}\r\n                \r\n            </div>\r\n\r\n                                \r\n            <Field \r\n                name = {'email'}\r\n                label = \"Email\"\r\n                component = { FormControlEmail }\r\n                validate = { [emailRequired, maxLength10 ] } />\r\n            <Field\r\n                name = {'full_name'}\r\n                label = \"Username\"\r\n                component = { FormControlEmail }\r\n                validate = { [required, maxLength10] } />\r\n            <Field \r\n                name = {'phone'}\r\n                label = \"Phone\"\r\n                component = { FormControlEmail }\r\n                validate = { [phoneRequired, required] }\r\n            />\r\n            <Field\r\n                name = {'password'}\r\n                label = \"Password\"\r\n                component = { FormControlPassword }\r\n                validate = { [required, maxLength10] }\r\n                />\r\n            <Field\r\n                name = {'re_password'}\r\n                label = \"Confirm Password\"\r\n                component = { FormControlPassword }\r\n                validate = {[ required, maxLength10]}\r\n            />\r\n            <Button\r\n                className = \"mt-3\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                fullWidth>\r\n                Create your account\r\n            </Button>\r\n\r\n            <div className=\"pt-3 d-flex justify-content-center\">\r\n\r\n                <NavLink to={'/forgot'} className = \"pr-5\">\r\n                    <Typography>Forgot password?</Typography>\r\n                </NavLink>\r\n\r\n\r\n                <NavLink to={'/login'}>\r\n                    <Typography>Access your account.</Typography>\r\n                </NavLink>\r\n            </div>\r\n        </form>\r\n\r\n    );\r\n}\r\n\r\nconst SignUpReduxForm = reduxForm({ form: \"signup\"})(SignUpForm);\r\n\r\n\r\n\r\nconst SuccessSignUp = (props) => {\r\n\r\n    const cls = useStyles();\r\n\r\n    const handleClick = () => {\r\n        props.setIsOpen(false)\r\n    }\r\n\r\n    return (<div className={classNames(cls.logo, `text-xs-center pb-xs`)}>\r\n        <Typography variant = \"h6\">\r\n            CLAY GROUP\r\n        </Typography>\r\n\r\n        <Typography variant=\"body1\">\r\n            Sen success register jasadin jane almaz mal ekenin bildin, Eger almaz mal dep iwinnen 3 ret aitsan super admin seni kabildaidi  \r\n        </Typography>  \r\n\r\n        <Typography variant = \"body1\">\r\n            <NavLink to = {'/login'} onClick = { handleClick }> Login page </NavLink>\r\n        </Typography>   \r\n    </div>)\r\n}\r\n\r\nconst SignUp = (props) => {\r\n    const cls = useStyles();\r\n    console.log(props.isOpen)\r\n    if (props.isAuth) {\r\n        return <Redirect to = '/' />\r\n    }\r\n\r\n    \r\n\r\n    const onSubmit = (formData) => {\r\n        props.signup(formData.email, formData.full_name, formData.phone, formData.password, formData.re_password)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className = {classNames(cls.session, cls.background)}>\r\n                <div className = {cls.content}>\r\n                    <div className = {cls.wrapper}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                {!props.isOpen ?<SignUpReduxForm onSubmit = { onSubmit }/> : <SuccessSignUp setIsOpen = {props.setIsOpen} />}\r\n                            </CardContent>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default SignUp;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signup, setIsOpen} from '../../redux/auth-reducer';\r\nimport SignUp from './SignUp';\r\n\r\n\r\nconst SignUpContainer = (props) => {\r\n    return <SignUp isAuth = {props.isAuth}\r\n                    signup = {props.signup}\r\n                    isOpen = { props.isOpen }\r\n                    setIsOpen = { props.setIsOpen } />\r\n\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.authPage.isAuth,\r\n    isOpen: state.authPage.isOpen,\r\n})\r\n\r\nexport default connect(mapStateToProps, { signup , setIsOpen})(SignUpContainer);","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Auth from './Auth';\r\nimport SignContainer from './components/Signin/SignContainer';\r\nimport ForgotPassword from './components/ForgotPassword/ForgotPassword';\r\n\r\nimport Layout from './hoc/Layout';\r\nimport { initalizeApp } from './redux/app-reducer';\r\nimport SignUpContainer from './components/SignUp/SignUpContainer';\r\n\r\n\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    this.props.initalizeApp();\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <div> </div>\r\n    }\r\n\r\n    return (\r\n      <Layout>\r\n        <Route exact path = '/login'\r\n          render = { () =>  <SignContainer /> }/>\r\n        <Route exact path = '/register' \r\n          render = { () => <SignUpContainer /> } />\r\n        <Route exact path = '/forgot'\r\n          render = { () => <ForgotPassword /> } />\r\n        <Auth />\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ initialized: state.appPage.initialized })\r\n\r\n\r\nexport default connect(mapStateToProps, { initalizeApp })(App);\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, createStore, combineReducers } from 'redux';\r\nimport staffReducer from './staff-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport authReducer from './auth-reducer';\r\nimport appReducer from './app-reducer';\r\nimport requestReducer from './request-reducer';\r\nimport projectReducer from './project-reducer';\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    staffPage: staffReducer,\r\n    authPage: authReducer,\r\n    appPage: appReducer,\r\n    requestPage: requestReducer,\r\n    projectPage: projectReducer,\r\n    form: formReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux-store';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\n\n  \n\nReactDOM.render(\n  <HashRouter basename = {process.env.PUBLIC_URL}>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"metaError\":\"FormControl_metaError__2_lLJ\",\"loginError\":\"FormControl_loginError__2ORsI\",\"formControl\":\"FormControl_formControl__2Iy_N\",\"error\":\"FormControl_error__29jeT\",\"fullWidth\":\"FormControl_fullWidth__1MfBR\"};"],"sourceRoot":""}